/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  '/api/v1/syncs/trigger': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    /**
     * Trigger Sync
     * @description Trigger billing data synchronization.
     *
     *     Starts synchronization job in the background (fire and forget).
     */
    post: operations['trigger_sync_api_v1_syncs_trigger_post']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/v1/syncs/status': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Get Sync Status
     * @description Get current sync status for providers.
     *
     *     Shows recent synchronizations and their status.
     */
    get: operations['get_sync_status_api_v1_syncs_status_get']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/v1/syncs/runs': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Get Sync Runs
     * @description Get sync run history with pagination and filters.
     *
     *     Returns history of all synchronizations with filtering capabilities.
     */
    get: operations['get_sync_runs_api_v1_syncs_runs_get']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/v1/syncs/runs/{run_id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Get Sync Run
     * @description Get detailed information about specific sync run.
     *
     *     Returns detailed information about a specific synchronization,
     *     including logs, errors, and metrics.
     */
    get: operations['get_sync_run_api_v1_syncs_runs__run_id__get']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/v1/syncs/runs/{run_id}/cancel': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    /**
     * Cancel Sync Run
     * @description Cancel running sync job.
     *
     *     Cancels a currently executing synchronization.
     */
    post: operations['cancel_sync_run_api_v1_syncs_runs__run_id__cancel_post']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/v1/syncs/runs/{run_id}/retry': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    /**
     * Retry Sync Run
     * @description Retry failed sync run.
     *
     *     Retries a failed synchronization with the same parameters.
     */
    post: operations['retry_sync_run_api_v1_syncs_runs__run_id__retry_post']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/v1/syncs/stats': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Get Sync Statistics
     * @description Get sync statistics and metrics.
     *
     *     Returns synchronization statistics: success rate, average time, etc.
     */
    get: operations['get_sync_statistics_api_v1_syncs_stats_get']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/v1/syncs/health': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Sync Health Check
     * @description Health check for sync API.
     */
    get: operations['sync_health_check_api_v1_syncs_health_get']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/v1/syncs/pipeline/graph': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Get Pipeline Graph
     * @description Get pipeline DAG visualization.
     */
    get: operations['get_pipeline_graph_api_v1_syncs_pipeline_graph_get']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/v1/providers/health': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Health Check
     * @description Health check endpoint for providers API.
     */
    get: operations['health_check_api_v1_providers_health_get']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/v1/providers': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * List Providers
     * @description List all providers.
     *
     *     - **include_inactive**: Include deactivated providers in results
     *     - **provider_type**: Filter by specific provider type (e.g., 'openai', 'aws')
     */
    get: operations['list_providers_api_v1_providers_get']
    put?: never
    /**
     * Create Provider
     * @description Create a new provider.
     *
     *     - **name**: Unique name for the provider
     *     - **provider_type**: Type of provider (openai, aws, azure, etc.)
     *     - **display_name**: Human-readable name for UI
     *     - **auth_config**: Authentication configuration (required)
     *     - **api_endpoint**: Optional custom API endpoint
     *     - **additional_config**: Optional provider-specific configuration
     */
    post: operations['create_provider_api_v1_providers_post']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/v1/providers/{provider_id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Get Provider
     * @description Get a specific provider by ID.
     *
     *     - **provider_id**: UUID of the provider to retrieve
     */
    get: operations['get_provider_api_v1_providers__provider_id__get']
    /**
     * Update Provider
     * @description Update an existing provider.
     *
     *     - **provider_id**: UUID of the provider to update
     *     - **display_name**: Updated display name
     *     - **auth_config**: Updated authentication configuration
     *     - **api_endpoint**: Updated API endpoint
     *     - **additional_config**: Updated provider-specific configuration
     *     - **is_active**: Enable/disable the provider
     */
    put: operations['update_provider_api_v1_providers__provider_id__put']
    post?: never
    /**
     * Delete Provider
     * @description Delete (deactivate) a provider.
     *
     *     Note: This performs a soft delete - the provider is deactivated but data is preserved.
     *
     *     - **provider_id**: UUID of the provider to delete
     */
    delete: operations['delete_provider_api_v1_providers__provider_id__delete']
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/v1/providers/{provider_id}/test': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    /**
     * Test Provider Connection
     * @description Test connection to a provider's API.
     *
     *     - **provider_id**: UUID of the provider to test
     */
    post: operations['test_provider_connection_api_v1_providers__provider_id__test_post']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/v1/providers/types/info': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Get Provider Types Info
     * @description Get information about all supported provider types.
     *
     *     Returns details about available provider types, their authentication methods,
     *     and configuration options.
     */
    get: operations['get_provider_types_info_api_v1_providers_types_info_get']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/v1/providers/types/{provider_type}/auth-fields': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Get Auth Fields
     * @description Get authentication field definitions for a provider type.
     *
     *     Returns the fields required for each supported authentication method.
     *
     *     - **provider_type**: Type of provider (openai, aws, etc.)
     *     - **auth_method**: Optional specific auth method to get fields for
     */
    get: operations['get_auth_fields_api_v1_providers_types__provider_type__auth_fields_get']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/v1/export/billing': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Export Billing Data
     * @description Export billing data as file (CSV or XLSX only).
     */
    get: operations['export_billing_data_api_v1_export_billing_get']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/v1/export/health': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Export Health Check
     * @description Health check for export API.
     */
    get: operations['export_health_check_api_v1_export_health_get']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/v1/billing/summary': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Get Billing Summary
     * @description Get billing data summary with aggregations.
     */
    get: operations['get_billing_summary_api_v1_billing_summary_get']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/v1/billing/data': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Get Billing Data
     * @description Get paginated billing data with filters.
     */
    get: operations['get_billing_data_api_v1_billing_data_get']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/v1/billing/services': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Get Cost By Service
     * @description Get cost breakdown by service.
     */
    get: operations['get_cost_by_service_api_v1_billing_services_get']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/v1/billing/trends': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Get Cost Trends
     * @description Get cost trends over time.
     */
    get: operations['get_cost_trends_api_v1_billing_trends_get']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/v1/billing/statistics': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Get Billing Statistics
     * @description Get billing statistics and metrics.
     */
    get: operations['get_billing_statistics_api_v1_billing_statistics_get']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/v1/billing/health': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Billing Health Check
     * @description Health check for billing API.
     */
    get: operations['billing_health_check_api_v1_billing_health_get']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/v1/analytics/': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * List Use Cases
     * @description List all available analytics use cases with optional filtering.
     */
    get: operations['list_use_cases_api_v1_analytics__get']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/v1/analytics/resource-rate': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Calculate Resource Rate
     * @description Calculate average rate of a component resource.
     */
    get: operations['calculate_resource_rate_api_v1_analytics_resource_rate_get']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/v1/analytics/resource-usage': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Quantify Resource Usage
     * @description Quantify usage of a component resource.
     */
    get: operations['quantify_resource_usage_api_v1_analytics_resource_usage_get']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/v1/analytics/unit-economics': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Calculate Unit Economics
     * @description Calculate unit economics.
     */
    get: operations['calculate_unit_economics_api_v1_analytics_unit_economics_get']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/v1/analytics/virtual-currency-target': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Analyze Virtual Currency Target
     * @description Determine target of virtual currency usage.
     */
    get: operations['analyze_virtual_currency_target_api_v1_analytics_virtual_currency_target_get']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/v1/analytics/effective-cost-by-currency': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Analyze Effective Cost By Currency
     * @description Analyze effective cost by pricing currency.
     */
    get: operations['analyze_effective_cost_by_currency_api_v1_analytics_effective_cost_by_currency_get']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/v1/analytics/virtual-currency-purchases': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Analyze Virtual Currency Purchases
     * @description Analyze purchase of virtual currency.
     */
    get: operations['analyze_virtual_currency_purchases_api_v1_analytics_virtual_currency_purchases_get']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/v1/analytics/contracted-savings': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Analyze Contracted Savings
     * @description Determine contracted savings by virtual currency.
     */
    get: operations['analyze_contracted_savings_api_v1_analytics_contracted_savings_get']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/v1/analytics/tag-coverage': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Analyze Tag Coverage
     * @description Analyze tag coverage.
     */
    get: operations['analyze_tag_coverage_api_v1_analytics_tag_coverage_get']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/v1/analytics/sku-metered-costs': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Analyze Sku Metered Costs
     * @description Analyze the different metered costs for a particular SKU.
     */
    get: operations['analyze_sku_metered_costs_api_v1_analytics_sku_metered_costs_get']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/v1/analytics/service-category-breakdown': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Get Service Category Breakdown
     * @description Report costs by service category and subcategory.
     */
    get: operations['get_service_category_breakdown_api_v1_analytics_service_category_breakdown_get']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/v1/analytics/capacity-reservation-analysis': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Analyze Capacity Reservations
     * @description Analyze capacity reservations on compute costs.
     */
    get: operations['analyze_capacity_reservations_api_v1_analytics_capacity_reservation_analysis_get']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/v1/analytics/unused-capacity': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Identify Unused Capacity
     * @description Identify unused capacity reservations.
     */
    get: operations['identify_unused_capacity_api_v1_analytics_unused_capacity_get']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/v1/analytics/refunds-by-subaccount': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Get Refunds By Subaccount
     * @description Report refunds by subaccount within a billing period.
     */
    get: operations['get_refunds_by_subaccount_api_v1_analytics_refunds_by_subaccount_get']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/v1/analytics/recurring-commitment-charges': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Get Recurring Commitment Charges
     * @description Report recurring charges for commitment-based discounts over a period.
     */
    get: operations['get_recurring_commitment_charges_api_v1_analytics_recurring_commitment_charges_get']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/v1/analytics/service-cost-analysis': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Analyze Service Costs
     * @description Analyze costs by service name.
     */
    get: operations['analyze_service_costs_api_v1_analytics_service_cost_analysis_get']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/v1/analytics/spending-by-billing-period': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Get Spending By Billing Period
     * @description Report spending across billing periods for a provider by service category.
     */
    get: operations['get_spending_by_billing_period_api_v1_analytics_spending_by_billing_period_get']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/v1/analytics/service-costs-by-region': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Analyze Service Costs By Region
     * @description Analyze service costs by region.
     */
    get: operations['analyze_service_costs_by_region_api_v1_analytics_service_costs_by_region_get']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/v1/analytics/service-costs-by-subaccount': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Get Service Costs By Subaccount
     * @description Report service costs by providers subaccount.
     */
    get: operations['get_service_costs_by_subaccount_api_v1_analytics_service_costs_by_subaccount_get']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/v1/analytics/service-cost-trends': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Analyze Service Cost Trends
     * @description Analyze service costs month over month.
     */
    get: operations['analyze_service_cost_trends_api_v1_analytics_service_cost_trends_get']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/v1/analytics/application-cost-trends': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Get Application Cost Trends
     * @description Report application cost month over month.
     */
    get: operations['get_application_cost_trends_api_v1_analytics_application_cost_trends_get']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/v1/analytics/providers': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Get Connected Providers
     * @description Get distinct provider names from billing data for connected providers only.
     */
    get: operations['get_connected_providers_api_v1_analytics_providers_get']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/v1/analytics/services': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Get Available Services
     * @description Get distinct service names from billing data.
     */
    get: operations['get_available_services_api_v1_analytics_services_get']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/v1/analytics/health': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Analytics Health Check
     * @description Health check for analytics API.
     */
    get: operations['analytics_health_check_api_v1_analytics_health_get']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/v1/config': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Get Config
     * @description Get application configuration.
     *
     *     Returns basic configuration information including demo mode status.
     */
    get: operations['get_config_api_v1_config_get']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/health': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Health Check
     * @description Health check endpoint.
     */
    get: operations['health_check_health_get']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** Api Root */
    get: operations['api_root_api__get']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/test': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** Test Endpoint */
    get: operations['test_endpoint_api_test_get']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
}
export type webhooks = Record<string, never>
export interface components {
  schemas: {
    /**
     * AnalyticsHealthCheckResponse
     * @description Health check response.
     */
    AnalyticsHealthCheckResponse: {
      /**
       * Status
       * @description Service health status
       * @default healthy
       */
      status: string
      /**
       * Service
       * @description Service name
       * @default analytics_api
       */
      service: string
      /**
       * Timestamp
       * @description Current timestamp
       */
      timestamp: string
    }
    /**
     * ApplicationCostTrendData
     * @description Single application cost trend data point.
     */
    ApplicationCostTrendData: {
      /**
       * Billing Month
       * @description Billing month (1-12)
       */
      billing_month: number
      /**
       * Billing Year
       * @description Billing year
       */
      billing_year: number
      /**
       * Month Name
       * @description Month name (YYYY-MM)
       */
      month_name: string
      /**
       * Service Name
       * @description Service name
       */
      service_name: string
      /**
       * Total Effective Cost
       * @description Total effective cost
       */
      total_effective_cost: number
      /**
       * Charge Count
       * @description Number of charges
       */
      charge_count: number
      /**
       * Avg Effective Cost
       * @description Average effective cost
       */
      avg_effective_cost: number
    }
    /**
     * ApplicationCostTrendFilters
     * @description Applied filters for application cost trend analysis.
     */
    ApplicationCostTrendFilters: {
      /**
       * Start Date
       * @description Start date
       */
      start_date: string
      /**
       * End Date
       * @description End date
       */
      end_date: string
      /**
       * Application Tag
       * @description Application tag filter
       */
      application_tag: string
      /**
       * Service Name
       * @description Service name filter
       */
      service_name?: string | null
    }
    /**
     * ApplicationCostTrendResponse
     * @description Response for application cost trend report.
     */
    ApplicationCostTrendResponse: {
      /**
       * Status
       * @description Response status
       */
      status: string
      /**
       * Data
       * @description Application cost trend data
       */
      data?: components['schemas']['ApplicationCostTrendData'][] | null
      /** @description Summary statistics */
      summary?: components['schemas']['ApplicationCostTrendSummary'] | null
      /** @description Applied filters */
      filters?: components['schemas']['ApplicationCostTrendFilters'] | null
      /**
       * Message
       * @description Error message if status is error
       */
      message?: string | null
      /** @description Use case metadata */
      metadata?: components['schemas']['UseCaseMetadata'] | null
    }
    /**
     * ApplicationCostTrendSummary
     * @description Summary statistics for application cost trend analysis.
     */
    ApplicationCostTrendSummary: {
      /**
       * Total Application Cost
       * @description Total application cost across all months
       */
      total_application_cost: number
      /**
       * Total Charge Count
       * @description Total number of charges
       */
      total_charge_count: number
      /**
       * Unique Months
       * @description Number of unique months
       */
      unique_months: number
      /**
       * Unique Services
       * @description Number of unique services
       */
      unique_services: number
      /**
       * Avg Monthly Cost
       * @description Average monthly cost
       */
      avg_monthly_cost: number
      /**
       * Cost Growth Rate
       * @description Overall cost growth rate percentage
       */
      cost_growth_rate: number
      /**
       * Monthly Breakdown
       * @description Breakdown by month
       */
      monthly_breakdown: components['schemas']['ApplicationMonthlyBreakdown'][]
      /**
       * Service Trends
       * @description Service trend analysis
       */
      service_trends: components['schemas']['ApplicationServiceTrend'][]
    }
    /**
     * ApplicationMonthlyBreakdown
     * @description Monthly breakdown for application.
     */
    ApplicationMonthlyBreakdown: {
      /**
       * Month
       * @description Month (YYYY-MM)
       */
      month: string
      /**
       * Total Cost
       * @description Total cost for this month
       */
      total_cost: number
      /**
       * Cost Percentage
       * @description Percentage of total cost
       */
      cost_percentage: number
    }
    /**
     * ApplicationServiceTrend
     * @description Service trend for application.
     */
    ApplicationServiceTrend: {
      /**
       * Service Name
       * @description Service name
       */
      service_name: string
      /**
       * Total Cost
       * @description Total cost across all months
       */
      total_cost: number
      /**
       * Months Active
       * @description Number of months with activity
       */
      months_active: number
      /**
       * Avg Monthly Cost
       * @description Average monthly cost
       */
      avg_monthly_cost: number
      /**
       * Growth Rate Percentage
       * @description Month-over-month growth rate percentage
       */
      growth_rate_percentage: number
      /**
       * Cost Percentage
       * @description Percentage of total application cost
       */
      cost_percentage: number
    }
    /** AuthFieldConfig */
    AuthFieldConfig: {
      /** Required */
      required: boolean
      /** Type */
      type: string
      /** Placeholder */
      placeholder?: string | null
      /** Description */
      description?: string | null
      /** Fields */
      fields?: {
        [key: string]: components['schemas']['AuthFieldConfig']
      } | null
    }
    /** AuthFieldsResponse */
    AuthFieldsResponse: {
      /** Provider Type */
      provider_type: string
      /** Supported Auth Methods */
      supported_auth_methods: string[]
      /** Default Auth Method */
      default_auth_method: string
      /** Auth Fields */
      auth_fields: {
        [key: string]: {
          [key: string]: components['schemas']['AuthFieldConfig']
        }
      }
    }
    /**
     * AuthMethodInfo
     * @description Information about an authentication method.
     */
    AuthMethodInfo: {
      /**
       * Method
       * @description Authentication method identifier
       */
      method: string
      /**
       * Display Name
       * @description Human-readable name
       */
      display_name: string
      /**
       * Description
       * @description Method description
       */
      description?: string | null
      /**
       * Fields
       * @description Field definitions for this auth method
       */
      fields?: {
        [key: string]: {
          [key: string]: unknown
        }
      }
    }
    /**
     * AvailableServicesResponse
     * @description Response for available services endpoint.
     */
    AvailableServicesResponse: {
      /**
       * Status
       * @description Response status
       */
      status: string
      /**
       * Data
       * @description List of available services with details
       */
      data: components['schemas']['ServiceInfo'][]
      /** @description Summary information */
      summary: components['schemas']['ServicesSummary']
      /**
       * Message
       * @description Error message if status is error
       */
      message?: string | null
    }
    /**
     * BillingDataResponse
     * @description Response schema for paginated billing data.
     */
    BillingDataResponse: {
      /** Data */
      data: components['schemas']['BillingRecord'][]
      pagination: components['schemas']['PaginationInfo']
    }
    /**
     * BillingRecord
     * @description Individual billing record.
     */
    BillingRecord: {
      /**
       * Id
       * Format: uuid
       */
      id: string
      /** Provider Name */
      provider_name?: string | null
      /** Service Name */
      service_name?: string | null
      /** Effective Cost */
      effective_cost: number
      /** Billed Cost */
      billed_cost?: number | null
      /** List Cost */
      list_cost?: number | null
      /** Billing Currency */
      billing_currency?: string | null
      /** Service Category */
      service_category?: string | null
      /** Charge Category */
      charge_category?: string | null
      /** Charge Period Start */
      charge_period_start?: string | null
      /** Charge Period End */
      charge_period_end?: string | null
      /** Resource Name */
      resource_name?: string | null
      /** Tags */
      tags?: {
        [key: string]: unknown
      }
    }
    /**
     * BillingSummaryResponse
     * @description Response schema for billing summary.
     */
    BillingSummaryResponse: {
      /** Total Cost */
      total_cost: number
      /** Total Records */
      total_records: number
      /**
       * Start Date
       * Format: date-time
       */
      start_date: string
      /**
       * End Date
       * Format: date-time
       */
      end_date: string
      /**
       * Currency
       * @default USD
       */
      currency: string
      /** Providers */
      providers?: {
        [key: string]: number
      }
      /** Services */
      services?: {
        [key: string]: number
      }
      /** Daily Costs */
      daily_costs?: {
        [key: string]: unknown
      }[]
    }
    /**
     * CapacityReservationAnalysisResponse
     * @description Response for capacity reservation analysis.
     */
    CapacityReservationAnalysisResponse: {
      /**
       * Status
       * @description Response status
       */
      status: string
      /**
       * Data
       * @description Capacity reservation data
       */
      data?: components['schemas']['CapacityReservationData'][] | null
      /** @description Summary statistics */
      summary?: components['schemas']['CapacityReservationSummary'] | null
      /** @description Applied filters */
      filters?: components['schemas']['CapacityReservationFilters'] | null
      /**
       * Message
       * @description Error message if status is error
       */
      message?: string | null
      /** @description Use case metadata */
      metadata?: components['schemas']['UseCaseMetadata'] | null
    }
    /**
     * CapacityReservationData
     * @description Single capacity reservation data point.
     */
    CapacityReservationData: {
      /**
       * Status
       * @description Capacity reservation status
       */
      status: string
      /**
       * Provider Name
       * @description Provider name
       */
      provider_name: string
      /**
       * Billing Account Id
       * @description Billing account ID
       */
      billing_account_id: string
      /**
       * Total Billed Cost
       * @description Total billed cost
       */
      total_billed_cost: number
      /**
       * Total Effective Cost
       * @description Total effective cost
       */
      total_effective_cost: number
      /**
       * Charge Count
       * @description Number of charges
       */
      charge_count: number
      /**
       * Unique Reservations
       * @description Number of unique reservations
       */
      unique_reservations: number
    }
    /**
     * CapacityReservationFilters
     * @description Applied filters for capacity reservation analysis.
     */
    CapacityReservationFilters: {
      /**
       * Start Date
       * @description Start date
       */
      start_date: string
      /**
       * End Date
       * @description End date
       */
      end_date: string
      /**
       * Provider Name
       * @description Provider name filter
       */
      provider_name?: string | null
      /**
       * Billing Account Id
       * @description Billing account ID filter
       */
      billing_account_id?: string | null
    }
    /**
     * CapacityReservationSummary
     * @description Summary statistics for capacity reservation analysis.
     */
    CapacityReservationSummary: {
      /**
       * Total Compute Cost
       * @description Total compute cost
       */
      total_compute_cost: number
      /**
       * Total Charges
       * @description Total number of charges
       */
      total_charges: number
      /**
       * Reservation Utilization Percentage
       * @description Reservation utilization percentage
       */
      reservation_utilization_percentage: number
      /**
       * Cost With Reservations
       * @description Cost with capacity reservations
       */
      cost_with_reservations: number
      /**
       * Cost Without Reservations
       * @description Cost without capacity reservations
       */
      cost_without_reservations: number
      /**
       * Total Reservations
       * @description Total number of reservations
       */
      total_reservations: number
      /**
       * Status Breakdown
       * @description Breakdown by status
       */
      status_breakdown: components['schemas']['StatusBreakdown'][]
    }
    /**
     * CategoryBreakdown
     * @description Category breakdown summary.
     */
    CategoryBreakdown: {
      /**
       * Service Category
       * @description Service category
       */
      service_category: string
      /**
       * Total Cost
       * @description Total cost for this category
       */
      total_cost: number
      /**
       * Charge Count
       * @description Number of charges for this category
       */
      charge_count: number
      /**
       * Unique Subcategories
       * @description Number of unique subcategories
       */
      unique_subcategories: number
      /**
       * Cost Percentage
       * @description Percentage of total cost
       */
      cost_percentage: number
    }
    /**
     * CommitmentBreakdown
     * @description Commitment type breakdown.
     */
    CommitmentBreakdown: {
      /**
       * Commitment Type
       * @description Commitment type
       */
      commitment_type: string
      /**
       * Total Savings
       * @description Total savings for this commitment type
       */
      total_savings: number
      /**
       * Total List Cost
       * @description Total list cost for this commitment type
       */
      total_list_cost: number
      /**
       * Charge Count
       * @description Number of charges for this commitment type
       */
      charge_count: number
      /**
       * Savings Percentage
       * @description Savings percentage for this commitment type
       */
      savings_percentage: number
    }
    /**
     * CommitmentTypeBreakdown
     * @description Commitment type breakdown summary.
     */
    CommitmentTypeBreakdown: {
      /**
       * Commitment Discount Type
       * @description Commitment discount type
       */
      commitment_discount_type: string
      /**
       * Total Cost
       * @description Total cost for this type
       */
      total_cost: number
      /**
       * Charge Count
       * @description Number of charges
       */
      charge_count: number
      /**
       * Unique Commitments
       * @description Number of unique commitments
       */
      unique_commitments: number
      /**
       * Billing Periods
       * @description Number of billing periods
       */
      billing_periods: number
      /**
       * Avg Cost Per Period
       * @description Average cost per period
       */
      avg_cost_per_period: number
      /**
       * Cost Percentage
       * @description Percentage of total cost
       */
      cost_percentage: number
    }
    /**
     * ConnectedProvidersResponse
     * @description Response for connected providers endpoint.
     */
    ConnectedProvidersResponse: {
      /**
       * Status
       * @description Response status
       */
      status: string
      /**
       * Data
       * @description List of connected provider names
       */
      data: string[]
      /** @description Summary information */
      summary: components['schemas']['ProvidersSummary']
      /**
       * Message
       * @description Error message if status is error
       */
      message?: string | null
    }
    /**
     * ContractedSavingsData
     * @description Single contracted savings data point.
     */
    ContractedSavingsData: {
      /**
       * Service Name
       * @description Service name
       */
      service_name: string
      /**
       * Service Subcategory
       * @description Service subcategory
       */
      service_subcategory: string
      /**
       * Charge Description
       * @description Charge description
       */
      charge_description: string
      /**
       * Billing Currency
       * @description Billing currency
       */
      billing_currency?: string | null
      /**
       * Pricing Currency
       * @description Pricing currency
       */
      pricing_currency?: string | null
      /**
       * Contracted Savings In Billing Currency
       * @description Unit savings in billing currency
       */
      contracted_savings_in_billing_currency: number
      /**
       * Total Savings Amount
       * @description Total savings amount
       */
      total_savings_amount: number
      /**
       * Total List Cost
       * @description Total list cost
       */
      total_list_cost: number
      /**
       * Total Contracted Cost
       * @description Total contracted cost
       */
      total_contracted_cost: number
      /**
       * Charge Count
       * @description Number of charges
       */
      charge_count: number
      /**
       * Avg Unit Savings
       * @description Average unit savings
       */
      avg_unit_savings: number
      /**
       * Commitment Discount Type
       * @description Commitment discount type
       */
      commitment_discount_type: string
      /**
       * Commitment Discount Status
       * @description Commitment discount status
       */
      commitment_discount_status: string
      /**
       * Savings Percentage
       * @description Savings percentage
       */
      savings_percentage: number
    }
    /**
     * ContractedSavingsFilters
     * @description Applied filters for contracted savings analysis.
     */
    ContractedSavingsFilters: {
      /**
       * Start Date
       * @description Start date
       */
      start_date: string
      /**
       * End Date
       * @description End date
       */
      end_date: string
      /**
       * Commitment Type
       * @description Commitment type filter
       */
      commitment_type?: string | null
    }
    /**
     * ContractedSavingsResponse
     * @description Response for contracted savings analysis.
     */
    ContractedSavingsResponse: {
      /**
       * Status
       * @description Response status
       */
      status: string
      /**
       * Data
       * @description Contracted savings data
       */
      data?: components['schemas']['ContractedSavingsData'][] | null
      /** @description Summary statistics */
      summary?: components['schemas']['ContractedSavingsSummary'] | null
      /** @description Applied filters */
      filters?: components['schemas']['ContractedSavingsFilters'] | null
      /**
       * Message
       * @description Error message if status is error
       */
      message?: string | null
      /** @description Use case metadata */
      metadata?: components['schemas']['UseCaseMetadata'] | null
    }
    /**
     * ContractedSavingsSummary
     * @description Summary statistics for contracted savings analysis.
     */
    ContractedSavingsSummary: {
      /**
       * Total Savings
       * @description Total savings across all commitments
       */
      total_savings: number
      /**
       * Total List Cost
       * @description Total list cost
       */
      total_list_cost: number
      /**
       * Total Contracted Cost
       * @description Total contracted cost
       */
      total_contracted_cost: number
      /**
       * Overall Savings Percentage
       * @description Overall savings percentage
       */
      overall_savings_percentage: number
      /**
       * Total Charges
       * @description Total number of charges
       */
      total_charges: number
      /**
       * Commitment Breakdown
       * @description Breakdown by commitment type
       */
      commitment_breakdown: components['schemas']['CommitmentBreakdown'][]
    }
    /**
     * CostTrendsResponse
     * @description Response schema for cost trends.
     */
    CostTrendsResponse: {
      /** Trends */
      trends: components['schemas']['TrendDataPoint'][]
      /** Group By */
      group_by: string
      /** Total Cost */
      total_cost?: number | null
      /** Period Start */
      period_start?: string | null
      /** Period End */
      period_end?: string | null
    }
    /**
     * CurrencyBreakdown
     * @description Currency breakdown summary.
     */
    CurrencyBreakdown: {
      /**
       * Currency
       * @description Currency code
       */
      currency: string
      /**
       * Total Cost
       * @description Total cost in this currency
       */
      total_cost: number
    }
    /**
     * DailyStats
     * @description Daily statistics.
     */
    DailyStats: {
      /**
       * Date
       * Format: date-time
       */
      date: string
      /** Total Runs */
      total_runs: number
      /** Successful Runs */
      successful_runs: number
      /** Failed Runs */
      failed_runs: number
      /** Total Records Processed */
      total_records_processed: number
      /** Avg Duration Seconds */
      avg_duration_seconds?: number | null
    }
    /**
     * EffectiveCostByCurrencyData
     * @description Single effective cost by currency data point.
     */
    EffectiveCostByCurrencyData: {
      /**
       * Provider Name
       * @description Cloud provider name
       */
      provider_name: string
      /**
       * Publisher Name
       * @description Publisher name
       */
      publisher_name: string
      /**
       * Service Name
       * @description Service name
       */
      service_name: string
      /**
       * Pricing Currency
       * @description Pricing currency
       */
      pricing_currency: string
      /**
       * Total Effective Cost
       * @description Total effective cost
       */
      total_effective_cost: number
      /**
       * Avg Effective Cost
       * @description Average effective cost
       */
      avg_effective_cost: number
      /**
       * Charge Count
       * @description Number of charges
       */
      charge_count: number
      /**
       * Earliest Charge
       * @description Earliest charge date
       */
      earliest_charge?: string | null
      /**
       * Latest Charge
       * @description Latest charge date
       */
      latest_charge?: string | null
    }
    /**
     * EffectiveCostByCurrencyFilters
     * @description Applied filters for effective cost by currency analysis.
     */
    EffectiveCostByCurrencyFilters: {
      /**
       * Start Date
       * @description Start date
       */
      start_date: string
      /**
       * End Date
       * @description End date
       */
      end_date: string
      /**
       * Include Exchange Rates
       * @description Whether to include exchange rates
       */
      include_exchange_rates: boolean
    }
    /**
     * EffectiveCostByCurrencyResponse
     * @description Response for effective cost by currency analysis.
     */
    EffectiveCostByCurrencyResponse: {
      /**
       * Status
       * @description Response status
       */
      status: string
      /**
       * Data
       * @description Cost by currency data
       */
      data?: components['schemas']['EffectiveCostByCurrencyData'][] | null
      /** @description Summary statistics */
      summary?: components['schemas']['EffectiveCostByCurrencySummary'] | null
      /** @description Applied filters */
      filters?: components['schemas']['EffectiveCostByCurrencyFilters'] | null
      /**
       * Message
       * @description Error message if status is error
       */
      message?: string | null
      /** @description Use case metadata */
      metadata?: components['schemas']['UseCaseMetadata'] | null
    }
    /**
     * EffectiveCostByCurrencySummary
     * @description Summary statistics for effective cost by currency analysis.
     */
    EffectiveCostByCurrencySummary: {
      /**
       * Total Cost
       * @description Total cost across all currencies
       */
      total_cost: number
      /**
       * Total Charges
       * @description Total number of charges
       */
      total_charges: number
      /**
       * Unique Currencies
       * @description Number of unique currencies
       */
      unique_currencies: number
      /**
       * Unique Services
       * @description Number of unique services
       */
      unique_services: number
      /**
       * Currency Breakdown
       * @description Breakdown by currency
       */
      currency_breakdown: components['schemas']['CurrencyBreakdown'][]
    }
    /** HTTPValidationError */
    HTTPValidationError: {
      /** Detail */
      detail?: components['schemas']['ValidationError'][]
    }
    /**
     * InstanceSeriesBreakdown
     * @description Instance series breakdown.
     */
    InstanceSeriesBreakdown: {
      /**
       * Instance Series
       * @description Instance series
       */
      instance_series: string
      /**
       * Total Cores
       * @description Total cores for this series
       */
      total_cores: number
      /**
       * Resource Count
       * @description Number of resources
       */
      resource_count: number
      /**
       * Unique Regions
       * @description Number of unique regions
       */
      unique_regions: number
      /**
       * Unique Services
       * @description Number of unique services
       */
      unique_services: number
      /**
       * Avg Cores Per Resource
       * @description Average cores per resource
       */
      avg_cores_per_resource: number
      /**
       * Core Percentage
       * @description Percentage of total cores
       */
      core_percentage: number
    }
    /**
     * MessageResponse
     * @description Generic message response.
     */
    MessageResponse: {
      /**
       * Message
       * @description Response message
       */
      message: string
    }
    /**
     * MonthlyBreakdown
     * @description Monthly breakdown summary.
     */
    MonthlyBreakdown: {
      /**
       * Month
       * @description Month (YYYY-MM)
       */
      month: string
      /**
       * Total Cost
       * @description Total cost for this month
       */
      total_cost: number
      /**
       * Cost Percentage
       * @description Percentage of total cost
       */
      cost_percentage: number
    }
    /**
     * PaginationInfo
     * @description Pagination information.
     */
    PaginationInfo: {
      /** Skip */
      skip: number
      /** Limit */
      limit: number
      /** Total */
      total: number
      /** Has More */
      has_more: boolean
    }
    /**
     * PeriodBreakdown
     * @description Period breakdown summary.
     */
    PeriodBreakdown: {
      /**
       * Billing Period
       * @description Billing period
       */
      billing_period: string
      /**
       * Total Cost
       * @description Total cost for this period
       */
      total_cost: number
      /**
       * Cost Percentage
       * @description Percentage of total cost
       */
      cost_percentage: number
      /**
       * Deviation From Avg
       * @description Deviation from average cost
       */
      deviation_from_avg: number
    }
    /**
     * PricingUnitBreakdown
     * @description Pricing unit breakdown.
     */
    PricingUnitBreakdown: {
      /**
       * Pricing Unit
       * @description Pricing unit
       */
      pricing_unit: string
      /**
       * Total Cost
       * @description Total cost for this unit
       */
      total_cost: number
      /**
       * Total Quantity
       * @description Total quantity for this unit
       */
      total_quantity: number
      /**
       * Charge Count
       * @description Number of charges for this unit
       */
      charge_count: number
      /**
       * Unique Skus
       * @description Number of unique SKUs for this unit
       */
      unique_skus: number
      /**
       * Avg Cost Per Unit
       * @description Average cost per unit
       */
      avg_cost_per_unit: number
    }
    /**
     * ProviderBreakdown
     * @description Provider breakdown summary.
     */
    ProviderBreakdown: {
      /**
       * Provider Name
       * @description Provider name
       */
      provider_name: string
      /**
       * Total Cost
       * @description Total cost for this provider
       */
      total_cost: number
      /**
       * Reservation Count
       * @description Number of unused reservations
       */
      reservation_count: number
      /**
       * Charge Count
       * @description Number of charges
       */
      charge_count: number
      /**
       * Unique Accounts
       * @description Number of unique accounts
       */
      unique_accounts: number
      /**
       * Cost Percentage
       * @description Percentage of total cost
       */
      cost_percentage: number
    }
    /**
     * ProviderCreate
     * @description Schema for creating a provider with auth configuration.
     */
    ProviderCreate: {
      /**
       * Name
       * @description Unique provider identifier
       */
      name: string
      /**
       * Provider Type
       * @description Provider type (openai, aws, azure, etc.)
       */
      provider_type: string
      /**
       * Display Name
       * @description Human-friendly display name
       */
      display_name?: string | null
      /**
       * Api Endpoint
       * @description Custom API endpoint
       */
      api_endpoint?: string | null
      /**
       * Additional Config
       * @description Provider-specific configuration
       */
      additional_config?: {
        [key: string]: unknown
      } | null
      /**
       * Auth Config
       * @description Authentication configuration
       * @example {
       *       "method": "bearer_token",
       *       "token": "sk-..."
       *     }
       */
      auth_config: {
        [key: string]: unknown
      }
    }
    /**
     * ProviderResponse
     * @description Schema for provider responses.
     */
    ProviderResponse: {
      /**
       * Name
       * @description Unique provider identifier
       */
      name: string
      /**
       * Provider Type
       * @description Provider type (openai, aws, azure, etc.)
       */
      provider_type: string
      /**
       * Display Name
       * @description Human-friendly display name
       */
      display_name?: string | null
      /**
       * Api Endpoint
       * @description Custom API endpoint
       */
      api_endpoint?: string | null
      /**
       * Additional Config
       * @description Provider-specific configuration
       */
      additional_config?: {
        [key: string]: unknown
      } | null
      /**
       * Id
       * Format: uuid
       */
      id: string
      /** Is Active */
      is_active: boolean
      /** Is Validated */
      is_validated: boolean
      /** Last Validation At */
      last_validation_at: string | null
      /** Validation Error */
      validation_error: string | null
      /** Last Sync At */
      last_sync_at: string | null
      /** Last Sync Status */
      last_sync_status: string | null
      /** Last Sync Error */
      last_sync_error: string | null
      /** Sync Statistics */
      sync_statistics: {
        [key: string]: unknown
      } | null
      /**
       * Created At
       * Format: date-time
       */
      created_at: string
      /**
       * Updated At
       * Format: date-time
       */
      updated_at: string
      /** Created By */
      created_by: string | null
      /** Updated By */
      updated_by: string | null
    }
    /**
     * ProviderStats
     * @description Provider-specific statistics.
     */
    ProviderStats: {
      /**
       * Provider Id
       * Format: uuid
       */
      provider_id: string
      /** Provider Name */
      provider_name?: string | null
      /** Total Runs */
      total_runs: number
      /** Successful Runs */
      successful_runs: number
      /** Failed Runs */
      failed_runs: number
      /** Success Rate */
      success_rate: number
      /** Avg Duration Seconds */
      avg_duration_seconds?: number | null
      /** Total Records Processed */
      total_records_processed: number
    }
    /**
     * ProviderTestResult
     * @description Schema for provider test results.
     */
    ProviderTestResult: {
      /** Success */
      success: boolean
      /** Message */
      message: string
      /** Details */
      details?: {
        [key: string]: unknown
      } | null
      /**
       * Timestamp
       * Format: date-time
       */
      timestamp?: string
    }
    /**
     * ProviderTypeInfo
     * @description Information about a provider type.
     */
    ProviderTypeInfo: {
      /** Provider Type */
      provider_type: string
      /** Display Name */
      display_name: string
      /** Description */
      description: string
      /** Supported Auth Methods */
      supported_auth_methods: components['schemas']['AuthMethodInfo'][]
      /** Default Auth Method */
      default_auth_method: string
      /** Required Config */
      required_config: string[]
      /** Optional Config */
      optional_config: string[]
      /** Configuration Schema */
      configuration_schema: {
        [key: string]: unknown
      }
      /** Capabilities */
      capabilities: string[]
      /** Status */
      status: string
      /** Version */
      version: string
    }
    /**
     * ProviderTypesResponse
     * @description Response for listing provider types.
     */
    ProviderTypesResponse: {
      /** Total Providers */
      total_providers: number
      /** Providers */
      providers: components['schemas']['ProviderTypeInfo'][]
      /** Focus Version */
      focus_version: string
      /** Api Version */
      api_version: string
    }
    /**
     * ProviderUpdate
     * @description Schema for updating a provider.
     */
    ProviderUpdate: {
      /** Name */
      name?: string | null
      /** Display Name */
      display_name?: string | null
      /**
       * Auth Config
       * @description Authentication configuration
       */
      auth_config?: {
        [key: string]: unknown
      } | null
      /** Api Endpoint */
      api_endpoint?: string | null
      /** Additional Config */
      additional_config?: {
        [key: string]: unknown
      } | null
      /** Is Active */
      is_active?: boolean | null
    }
    /**
     * ProvidersSummary
     * @description Summary information for connected providers.
     */
    ProvidersSummary: {
      /**
       * Total Connected Providers
       * @description Total number of connected providers
       */
      total_connected_providers: number
      /**
       * Provider List
       * @description Sorted list of connected provider names
       */
      provider_list: string[]
    }
    /**
     * RecurringChargeData
     * @description Single recurring charge data point.
     */
    RecurringChargeData: {
      /**
       * Billing Period Start
       * @description Billing period start
       */
      billing_period_start: string
      /**
       * Commitment Discount Id
       * @description Commitment discount ID
       */
      commitment_discount_id: string
      /**
       * Commitment Discount Name
       * @description Commitment discount name
       */
      commitment_discount_name: string
      /**
       * Commitment Discount Type
       * @description Commitment discount type
       */
      commitment_discount_type: string
      /**
       * Charge Frequency
       * @description Charge frequency
       */
      charge_frequency: string
      /**
       * Total Billed Cost
       * @description Total billed cost
       */
      total_billed_cost: number
      /**
       * Charge Count
       * @description Number of charges
       */
      charge_count: number
      /**
       * Avg Charge Amount
       * @description Average charge amount
       */
      avg_charge_amount: number
      /**
       * Min Effective Cost
       * @description Minimum effective cost
       */
      min_effective_cost: number
      /**
       * Max Effective Cost
       * @description Maximum effective cost
       */
      max_effective_cost: number
    }
    /**
     * RecurringChargesFilters
     * @description Applied filters for recurring charges analysis.
     */
    RecurringChargesFilters: {
      /**
       * Start Date
       * @description Start date
       */
      start_date: string
      /**
       * End Date
       * @description End date
       */
      end_date: string
      /**
       * Commitment Discount Type
       * @description Commitment discount type filter
       */
      commitment_discount_type?: string | null
      /**
       * Charge Frequency
       * @description Charge frequency filter
       */
      charge_frequency: string
    }
    /**
     * RecurringChargesSummary
     * @description Summary statistics for recurring charges analysis.
     */
    RecurringChargesSummary: {
      /**
       * Total Recurring Cost
       * @description Total recurring cost
       */
      total_recurring_cost: number
      /**
       * Total Charge Count
       * @description Total number of charges
       */
      total_charge_count: number
      /**
       * Unique Commitments
       * @description Number of unique commitments
       */
      unique_commitments: number
      /**
       * Unique Commitment Types
       * @description Number of unique commitment types
       */
      unique_commitment_types: number
      /**
       * Billing Periods
       * @description Number of billing periods
       */
      billing_periods: number
      /**
       * Avg Cost Per Period
       * @description Average cost per period
       */
      avg_cost_per_period: number
      /**
       * Commitment Type Breakdown
       * @description Breakdown by commitment type
       */
      commitment_type_breakdown: components['schemas']['CommitmentTypeBreakdown'][]
    }
    /**
     * RecurringCommitmentChargesResponse
     * @description Response for recurring commitment charges report.
     */
    RecurringCommitmentChargesResponse: {
      /**
       * Status
       * @description Response status
       */
      status: string
      /**
       * Data
       * @description Recurring charge data
       */
      data?: components['schemas']['RecurringChargeData'][] | null
      /** @description Summary statistics */
      summary?: components['schemas']['RecurringChargesSummary'] | null
      /** @description Applied filters */
      filters?: components['schemas']['RecurringChargesFilters'] | null
      /**
       * Message
       * @description Error message if status is error
       */
      message?: string | null
      /** @description Use case metadata */
      metadata?: components['schemas']['UseCaseMetadata'] | null
    }
    /**
     * RefundData
     * @description Single refund data point.
     */
    RefundData: {
      /**
       * Provider Name
       * @description Provider name
       */
      provider_name: string
      /**
       * Billing Account Id
       * @description Billing account ID
       */
      billing_account_id: string
      /**
       * Service Category
       * @description Service category
       */
      service_category: string
      /**
       * Sub Account Id
       * @description Sub account ID
       */
      sub_account_id: string
      /**
       * Sub Account Name
       * @description Sub account name
       */
      sub_account_name: string
      /**
       * Total Billed Cost
       * @description Total refund amount
       */
      total_billed_cost: number
      /**
       * Refund Count
       * @description Number of refunds
       */
      refund_count: number
      /**
       * Earliest Refund
       * @description Earliest refund date
       */
      earliest_refund?: string | null
      /**
       * Latest Refund
       * @description Latest refund date
       */
      latest_refund?: string | null
      /**
       * Avg Refund Amount
       * @description Average refund amount
       */
      avg_refund_amount: number
    }
    /**
     * RefundsBySubaccountResponse
     * @description Response for refunds by subaccount report.
     */
    RefundsBySubaccountResponse: {
      /**
       * Status
       * @description Response status
       */
      status: string
      /**
       * Data
       * @description Refund data
       */
      data?: components['schemas']['RefundData'][] | null
      /** @description Summary statistics */
      summary?: components['schemas']['RefundsSummary'] | null
      /** @description Applied filters */
      filters?: components['schemas']['RefundsFilters'] | null
      /**
       * Message
       * @description Error message if status is error
       */
      message?: string | null
      /** @description Use case metadata */
      metadata?: components['schemas']['UseCaseMetadata'] | null
    }
    /**
     * RefundsFilters
     * @description Applied filters for refunds analysis.
     */
    RefundsFilters: {
      /**
       * Start Date
       * @description Start date
       */
      start_date: string
      /**
       * End Date
       * @description End date
       */
      end_date: string
      /**
       * Provider Name
       * @description Provider name filter
       */
      provider_name?: string | null
      /**
       * Billing Account Id
       * @description Billing account ID filter
       */
      billing_account_id?: string | null
      /**
       * Service Category
       * @description Service category filter
       */
      service_category?: string | null
    }
    /**
     * RefundsSummary
     * @description Summary statistics for refunds analysis.
     */
    RefundsSummary: {
      /**
       * Total Refund Amount
       * @description Total refund amount
       */
      total_refund_amount: number
      /**
       * Total Refund Count
       * @description Total number of refunds
       */
      total_refund_count: number
      /**
       * Unique Subaccounts
       * @description Number of unique subaccounts
       */
      unique_subaccounts: number
      /**
       * Unique Service Categories
       * @description Number of unique service categories
       */
      unique_service_categories: number
      /**
       * Unique Providers
       * @description Number of unique providers
       */
      unique_providers: number
      /**
       * Avg Refund Per Subaccount
       * @description Average refund per subaccount
       */
      avg_refund_per_subaccount: number
      /**
       * Subaccount Breakdown
       * @description Breakdown by subaccount
       */
      subaccount_breakdown: components['schemas']['SubaccountBreakdown'][]
    }
    /**
     * RegionBreakdown
     * @description Region breakdown summary.
     */
    RegionBreakdown: {
      /**
       * Region Id
       * @description Region ID
       */
      region_id: string
      /**
       * Region Name
       * @description Region name
       */
      region_name: string
      /**
       * Total Cost
       * @description Total cost for this region
       */
      total_cost: number
      /**
       * Charge Count
       * @description Number of charges
       */
      charge_count: number
      /**
       * Unique Services
       * @description Number of unique services
       */
      unique_services: number
      /**
       * Unique Providers
       * @description Number of unique providers
       */
      unique_providers: number
      /**
       * Charge Periods
       * @description Number of charge periods
       */
      charge_periods: number
      /**
       * Cost Percentage
       * @description Percentage of total cost
       */
      cost_percentage: number
    }
    /**
     * RegionUsageBreakdown
     * @description Region usage breakdown.
     */
    RegionUsageBreakdown: {
      /**
       * Region Name
       * @description Region name
       */
      region_name: string
      /**
       * Total Cores
       * @description Total cores in this region
       */
      total_cores: number
      /**
       * Resource Count
       * @description Number of resources
       */
      resource_count: number
      /**
       * Unique Instance Series
       * @description Number of unique instance series
       */
      unique_instance_series: number
      /**
       * Unique Services
       * @description Number of unique services
       */
      unique_services: number
      /**
       * Avg Cores Per Resource
       * @description Average cores per resource
       */
      avg_cores_per_resource: number
      /**
       * Core Percentage
       * @description Percentage of total cores
       */
      core_percentage: number
    }
    /**
     * ResourceRateData
     * @description Single resource rate data point.
     */
    ResourceRateData: {
      /**
       * Provider Name
       * @description Cloud provider name
       */
      provider_name: string
      /**
       * Service Name
       * @description Service name
       */
      service_name: string
      /**
       * Pricing Unit
       * @description Pricing unit
       */
      pricing_unit: string
      /**
       * Region Name
       * @description Region name
       */
      region_name: string
      /**
       * Instance Series
       * @description Instance series
       */
      instance_series?: string | null
      /**
       * Total Core Count
       * @description Total core count
       */
      total_core_count: number
      /**
       * Average Effective Core Cost
       * @description Average cost per core
       */
      average_effective_core_cost: number
    }
    /**
     * ResourceRateFilters
     * @description Applied filters for resource rate analysis.
     */
    ResourceRateFilters: {
      /**
       * Start Date
       * @description Start date
       */
      start_date: string
      /**
       * End Date
       * @description End date
       */
      end_date: string
      /**
       * Provider Name
       * @description Provider filter
       */
      provider_name?: string | null
      /**
       * Service Name
       * @description Service filter
       */
      service_name?: string | null
      /**
       * Region Name
       * @description Region filter
       */
      region_name?: string | null
    }
    /**
     * ResourceRateResponse
     * @description Response for resource rate calculation.
     */
    ResourceRateResponse: {
      /**
       * Status
       * @description Response status
       */
      status: string
      /**
       * Data
       * @description Resource rate data
       */
      data?: components['schemas']['ResourceRateData'][] | null
      /** @description Summary statistics */
      summary?: components['schemas']['ResourceRateSummary'] | null
      /** @description Applied filters */
      filters?: components['schemas']['ResourceRateFilters'] | null
      /**
       * Message
       * @description Error message if status is error
       */
      message?: string | null
      /** @description Use case metadata */
      metadata?: components['schemas']['UseCaseMetadata'] | null
    }
    /**
     * ResourceRateSummary
     * @description Summary statistics for resource rate analysis.
     */
    ResourceRateSummary: {
      /**
       * Total Resources
       * @description Total number of resource configurations
       */
      total_resources: number
      /**
       * Total Core Count
       * @description Total core count across all resources
       */
      total_core_count: number
      /**
       * Average Cost Per Core
       * @description Overall average cost per core
       */
      average_cost_per_core: number
    }
    /**
     * ResourceUsageData
     * @description Single resource usage data point.
     */
    ResourceUsageData: {
      /**
       * Provider Name
       * @description Provider name
       */
      provider_name: string
      /**
       * Service Name
       * @description Service name
       */
      service_name: string
      /**
       * Pricing Unit
       * @description Pricing unit
       */
      pricing_unit: string
      /**
       * Region Name
       * @description Region name
       */
      region_name: string
      /**
       * Instance Series
       * @description Instance series
       */
      instance_series: string
      /**
       * Total Core Count
       * @description Total core count
       */
      total_core_count: number
      /**
       * Resource Count
       * @description Number of resources
       */
      resource_count: number
      /**
       * Avg Core Count
       * @description Average core count per resource
       */
      avg_core_count: number
      /**
       * Min Core Count
       * @description Minimum core count
       */
      min_core_count: number
      /**
       * Max Core Count
       * @description Maximum core count
       */
      max_core_count: number
    }
    /**
     * ResourceUsageFilters
     * @description Applied filters for resource usage analysis.
     */
    ResourceUsageFilters: {
      /**
       * Start Date
       * @description Start date
       */
      start_date: string
      /**
       * End Date
       * @description End date
       */
      end_date: string
      /**
       * Provider Name
       * @description Provider name filter
       */
      provider_name?: string | null
      /**
       * Service Name
       * @description Service name filter
       */
      service_name?: string | null
      /**
       * Region Name
       * @description Region name filter
       */
      region_name?: string | null
    }
    /**
     * ResourceUsageResponse
     * @description Response for resource usage quantification.
     */
    ResourceUsageResponse: {
      /**
       * Status
       * @description Response status
       */
      status: string
      /**
       * Data
       * @description Resource usage data
       */
      data?: components['schemas']['ResourceUsageData'][] | null
      /** @description Summary statistics */
      summary?: components['schemas']['ResourceUsageSummary'] | null
      /** @description Applied filters */
      filters?: components['schemas']['ResourceUsageFilters'] | null
      /**
       * Message
       * @description Error message if status is error
       */
      message?: string | null
      /** @description Use case metadata */
      metadata?: components['schemas']['UseCaseMetadata'] | null
    }
    /**
     * ResourceUsageSummary
     * @description Summary statistics for resource usage analysis.
     */
    ResourceUsageSummary: {
      /**
       * Total Core Count
       * @description Total core count across all resources
       */
      total_core_count: number
      /**
       * Total Resources
       * @description Total number of resources
       */
      total_resources: number
      /**
       * Unique Instance Series
       * @description Number of unique instance series
       */
      unique_instance_series: number
      /**
       * Unique Services
       * @description Number of unique services
       */
      unique_services: number
      /**
       * Unique Regions
       * @description Number of unique regions
       */
      unique_regions: number
      /**
       * Avg Cores Per Resource
       * @description Average cores per resource
       */
      avg_cores_per_resource: number
      /**
       * Instance Series Breakdown
       * @description Breakdown by instance series
       */
      instance_series_breakdown: components['schemas']['InstanceSeriesBreakdown'][]
      /**
       * Region Breakdown
       * @description Breakdown by region
       */
      region_breakdown: components['schemas']['RegionUsageBreakdown'][]
    }
    /**
     * SKUMeteredCostsData
     * @description Single SKU metered costs data point.
     */
    SKUMeteredCostsData: {
      /**
       * Provider Name
       * @description Provider name
       */
      provider_name: string
      /**
       * Charge Period Start
       * @description Charge period start
       */
      charge_period_start: string
      /**
       * Charge Period End
       * @description Charge period end
       */
      charge_period_end: string
      /**
       * Sku Id
       * @description SKU ID
       */
      sku_id: string
      /**
       * Sku Price Id
       * @description SKU price ID
       */
      sku_price_id?: string | null
      /**
       * Pricing Unit
       * @description Pricing unit
       */
      pricing_unit?: string | null
      /**
       * List Unit Price
       * @description List unit price
       */
      list_unit_price: number
      /**
       * Total Pricing Quantity
       * @description Total pricing quantity
       */
      total_pricing_quantity: number
      /**
       * Total List Cost
       * @description Total list cost
       */
      total_list_cost: number
      /**
       * Total Effective Cost
       * @description Total effective cost
       */
      total_effective_cost: number
      /**
       * Charge Count
       * @description Number of charges
       */
      charge_count: number
      /**
       * Avg Effective Cost
       * @description Average effective cost
       */
      avg_effective_cost: number
      /**
       * Cost Per Unit
       * @description Cost per unit
       */
      cost_per_unit: number
    }
    /**
     * SKUMeteredCostsFilters
     * @description Applied filters for SKU metered costs analysis.
     */
    SKUMeteredCostsFilters: {
      /**
       * Start Date
       * @description Start date
       */
      start_date: string
      /**
       * End Date
       * @description End date
       */
      end_date: string
      /**
       * Sku Id
       * @description SKU ID filter
       */
      sku_id?: string | null
      /**
       * Provider Name
       * @description Provider name filter
       */
      provider_name?: string | null
      /**
       * Limit
       * @description Result limit
       */
      limit: number
    }
    /**
     * SKUMeteredCostsResponse
     * @description Response for SKU metered costs analysis.
     */
    SKUMeteredCostsResponse: {
      /**
       * Status
       * @description Response status
       */
      status: string
      /**
       * Data
       * @description SKU metered costs data
       */
      data?: components['schemas']['SKUMeteredCostsData'][] | null
      /** @description Summary statistics */
      summary?: components['schemas']['SKUMeteredCostsSummary'] | null
      /** @description Applied filters */
      filters?: components['schemas']['SKUMeteredCostsFilters'] | null
      /**
       * Message
       * @description Error message if status is error
       */
      message?: string | null
      /** @description Use case metadata */
      metadata?: components['schemas']['UseCaseMetadata'] | null
    }
    /**
     * SKUMeteredCostsSummary
     * @description Summary statistics for SKU metered costs analysis.
     */
    SKUMeteredCostsSummary: {
      /**
       * Total Skus
       * @description Total number of unique SKUs
       */
      total_skus: number
      /**
       * Total Cost
       * @description Total cost across all SKUs
       */
      total_cost: number
      /**
       * Total Quantity
       * @description Total quantity across all SKUs
       */
      total_quantity: number
      /**
       * Unique Pricing Units
       * @description Number of unique pricing units
       */
      unique_pricing_units: number
      /**
       * Date Range Days
       * @description Number of days in the analysis period
       */
      date_range_days: number
      /**
       * Pricing Unit Breakdown
       * @description Breakdown by pricing unit
       */
      pricing_unit_breakdown: components['schemas']['PricingUnitBreakdown'][]
    }
    /**
     * ServiceBreakdownResponse
     * @description Response schema for service cost breakdown.
     */
    ServiceBreakdownResponse: {
      /** Services */
      services: components['schemas']['ServiceCostBreakdown'][]
      /** Total Services */
      total_services: number
      /** Total Cost */
      total_cost?: number | null
      /** Period Start */
      period_start?: string | null
      /** Period End */
      period_end?: string | null
    }
    /**
     * ServiceByRegionBreakdown
     * @description Service breakdown summary.
     */
    ServiceByRegionBreakdown: {
      /**
       * Service Name
       * @description Service name
       */
      service_name: string
      /**
       * Total Cost
       * @description Total cost for this service
       */
      total_cost: number
      /**
       * Charge Count
       * @description Number of charges
       */
      charge_count: number
      /**
       * Unique Regions
       * @description Number of unique regions
       */
      unique_regions: number
      /**
       * Unique Providers
       * @description Number of unique providers
       */
      unique_providers: number
      /**
       * Charge Periods
       * @description Number of charge periods
       */
      charge_periods: number
      /**
       * Cost Percentage
       * @description Percentage of total cost
       */
      cost_percentage: number
    }
    /**
     * ServiceCategoryBreakdownResponse
     * @description Response for service category breakdown.
     */
    ServiceCategoryBreakdownResponse: {
      /**
       * Status
       * @description Response status
       */
      status: string
      /**
       * Data
       * @description Service category data
       */
      data?: components['schemas']['ServiceCategoryData'][] | null
      /** @description Summary statistics */
      summary?: components['schemas']['ServiceCategorySummary'] | null
      /** @description Applied filters */
      filters?: components['schemas']['ServiceCategoryFilters'] | null
      /**
       * Message
       * @description Error message if status is error
       */
      message?: string | null
      /** @description Use case metadata */
      metadata?: components['schemas']['UseCaseMetadata'] | null
    }
    /**
     * ServiceCategoryData
     * @description Single service category data point.
     */
    ServiceCategoryData: {
      /**
       * Provider Name
       * @description Provider name
       */
      provider_name: string
      /**
       * Billing Currency
       * @description Billing currency
       */
      billing_currency?: string | null
      /**
       * Charge Period Start
       * @description Charge period start date
       */
      charge_period_start: string
      /**
       * Service Category
       * @description Service category
       */
      service_category: string
      /**
       * Service Subcategory
       * @description Service subcategory
       */
      service_subcategory: string
      /**
       * Total Billed Cost
       * @description Total billed cost
       */
      total_billed_cost: number
      /**
       * Charge Count
       * @description Number of charges
       */
      charge_count: number
      /**
       * Avg Billed Cost
       * @description Average billed cost
       */
      avg_billed_cost: number
    }
    /**
     * ServiceCategoryFilters
     * @description Applied filters for service category analysis.
     */
    ServiceCategoryFilters: {
      /**
       * Start Date
       * @description Start date
       */
      start_date: string
      /**
       * End Date
       * @description End date
       */
      end_date: string
      /**
       * Provider Name
       * @description Provider name filter
       */
      provider_name?: string | null
      /**
       * Service Category
       * @description Service category filter
       */
      service_category?: string | null
    }
    /**
     * ServiceCategorySummary
     * @description Summary statistics for service category analysis.
     */
    ServiceCategorySummary: {
      /**
       * Total Cost
       * @description Total cost across all categories
       */
      total_cost: number
      /**
       * Total Charges
       * @description Total number of charges
       */
      total_charges: number
      /**
       * Unique Categories
       * @description Number of unique categories
       */
      unique_categories: number
      /**
       * Unique Subcategories
       * @description Number of unique subcategories
       */
      unique_subcategories: number
      /**
       * Unique Providers
       * @description Number of unique providers
       */
      unique_providers: number
      /**
       * Category Breakdown
       * @description Breakdown by category
       */
      category_breakdown: components['schemas']['CategoryBreakdown'][]
    }
    /**
     * ServiceCostAnalysisResponse
     * @description Response for service cost analysis.
     */
    ServiceCostAnalysisResponse: {
      /**
       * Status
       * @description Response status
       */
      status: string
      /**
       * Data
       * @description Service cost data
       */
      data?: components['schemas']['ServiceCostData'][] | null
      /** @description Summary statistics */
      summary?: components['schemas']['ServiceCostSummary'] | null
      /** @description Applied filters */
      filters?: components['schemas']['ServiceCostFilters'] | null
      /**
       * Message
       * @description Error message if status is error
       */
      message?: string | null
      /** @description Use case metadata */
      metadata?: components['schemas']['UseCaseMetadata'] | null
    }
    /**
     * ServiceCostBreakdown
     * @description Service cost breakdown item.
     */
    ServiceCostBreakdown: {
      /** Service Name */
      service_name: string
      /** Total Cost */
      total_cost: number
      /** Record Count */
      record_count: number
      /** Percentage */
      percentage?: number | null
    }
    /**
     * ServiceCostByRegionData
     * @description Single service cost by region data point.
     */
    ServiceCostByRegionData: {
      /**
       * Charge Period Start
       * @description Charge period start
       */
      charge_period_start: string
      /**
       * Provider Name
       * @description Provider name
       */
      provider_name: string
      /**
       * Region Id
       * @description Region ID
       */
      region_id: string
      /**
       * Region Name
       * @description Region name
       */
      region_name: string
      /**
       * Service Name
       * @description Service name
       */
      service_name: string
      /**
       * Total Effective Cost
       * @description Total effective cost
       */
      total_effective_cost: number
      /**
       * Charge Count
       * @description Number of charges
       */
      charge_count: number
      /**
       * Avg Effective Cost
       * @description Average effective cost
       */
      avg_effective_cost: number
      /**
       * Min Effective Cost
       * @description Minimum effective cost
       */
      min_effective_cost: number
      /**
       * Max Effective Cost
       * @description Maximum effective cost
       */
      max_effective_cost: number
    }
    /**
     * ServiceCostByRegionFilters
     * @description Applied filters for service cost by region analysis.
     */
    ServiceCostByRegionFilters: {
      /**
       * Start Date
       * @description Start date
       */
      start_date: string
      /**
       * End Date
       * @description End date
       */
      end_date: string
      /**
       * Provider Name
       * @description Provider name filter
       */
      provider_name?: string | null
      /**
       * Region Id
       * @description Region ID filter
       */
      region_id?: string | null
      /**
       * Service Name
       * @description Service name filter
       */
      service_name?: string | null
    }
    /**
     * ServiceCostByRegionResponse
     * @description Response for service cost by region analysis.
     */
    ServiceCostByRegionResponse: {
      /**
       * Status
       * @description Response status
       */
      status: string
      /**
       * Data
       * @description Service cost by region data
       */
      data?: components['schemas']['ServiceCostByRegionData'][] | null
      /** @description Summary statistics */
      summary?: components['schemas']['ServiceCostByRegionSummary'] | null
      /** @description Applied filters */
      filters?: components['schemas']['ServiceCostByRegionFilters'] | null
      /**
       * Message
       * @description Error message if status is error
       */
      message?: string | null
      /** @description Use case metadata */
      metadata?: components['schemas']['UseCaseMetadata'] | null
    }
    /**
     * ServiceCostByRegionSummary
     * @description Summary statistics for service cost by region analysis.
     */
    ServiceCostByRegionSummary: {
      /**
       * Total Cost
       * @description Total cost across all regions
       */
      total_cost: number
      /**
       * Total Charge Count
       * @description Total number of charges
       */
      total_charge_count: number
      /**
       * Unique Regions
       * @description Number of unique regions
       */
      unique_regions: number
      /**
       * Unique Services
       * @description Number of unique services
       */
      unique_services: number
      /**
       * Unique Providers
       * @description Number of unique providers
       */
      unique_providers: number
      /**
       * Charge Periods
       * @description Number of charge periods
       */
      charge_periods: number
      /**
       * Region Breakdown
       * @description Breakdown by region
       */
      region_breakdown: components['schemas']['RegionBreakdown'][]
      /**
       * Service Breakdown
       * @description Breakdown by service
       */
      service_breakdown: components['schemas']['ServiceByRegionBreakdown'][]
    }
    /**
     * ServiceCostBySubaccountData
     * @description Single service cost by subaccount data point.
     */
    ServiceCostBySubaccountData: {
      /**
       * Provider Name
       * @description Provider name
       */
      provider_name: string
      /**
       * Service Name
       * @description Service name
       */
      service_name: string
      /**
       * Sub Account Id
       * @description Sub account ID
       */
      sub_account_id: string
      /**
       * Sub Account Name
       * @description Sub account name
       */
      sub_account_name: string
      /**
       * Charge Period Start
       * @description Charge period start
       */
      charge_period_start: string
      /**
       * Billing Period Start
       * @description Billing period start
       */
      billing_period_start?: string | null
      /**
       * Total Effective Cost
       * @description Total effective cost
       */
      total_effective_cost: number
      /**
       * Charge Count
       * @description Number of charges
       */
      charge_count: number
      /**
       * Avg Effective Cost
       * @description Average effective cost
       */
      avg_effective_cost: number
      /**
       * Min Effective Cost
       * @description Minimum effective cost
       */
      min_effective_cost: number
      /**
       * Max Effective Cost
       * @description Maximum effective cost
       */
      max_effective_cost: number
    }
    /**
     * ServiceCostBySubaccountFilters
     * @description Applied filters for service cost by subaccount analysis.
     */
    ServiceCostBySubaccountFilters: {
      /**
       * Start Date
       * @description Start date
       */
      start_date: string
      /**
       * End Date
       * @description End date
       */
      end_date: string
      /**
       * Sub Account Id
       * @description Sub account ID filter
       */
      sub_account_id: string
      /**
       * Provider Name
       * @description Provider name filter
       */
      provider_name: string
      /**
       * Service Name
       * @description Service name filter
       */
      service_name?: string | null
    }
    /**
     * ServiceCostBySubaccountResponse
     * @description Response for service cost by subaccount report.
     */
    ServiceCostBySubaccountResponse: {
      /**
       * Status
       * @description Response status
       */
      status: string
      /**
       * Data
       * @description Service cost by subaccount data
       */
      data?: components['schemas']['ServiceCostBySubaccountData'][] | null
      /** @description Summary statistics */
      summary?: components['schemas']['ServiceCostBySubaccountSummary'] | null
      /** @description Applied filters */
      filters?: components['schemas']['ServiceCostBySubaccountFilters'] | null
      /**
       * Message
       * @description Error message if status is error
       */
      message?: string | null
      /** @description Use case metadata */
      metadata?: components['schemas']['UseCaseMetadata'] | null
    }
    /**
     * ServiceCostBySubaccountSummary
     * @description Summary statistics for service cost by subaccount analysis.
     */
    ServiceCostBySubaccountSummary: {
      /**
       * Total Subaccount Cost
       * @description Total cost for the subaccount
       */
      total_subaccount_cost: number
      /**
       * Total Charge Count
       * @description Total number of charges
       */
      total_charge_count: number
      /**
       * Unique Services
       * @description Number of unique services
       */
      unique_services: number
      /**
       * Charge Periods
       * @description Number of charge periods
       */
      charge_periods: number
      /**
       * Avg Cost Per Period
       * @description Average cost per period
       */
      avg_cost_per_period: number
      /**
       * Cost Variance
       * @description Cost variance (standard deviation)
       */
      cost_variance: number
      /**
       * Service Breakdown
       * @description Breakdown by service
       */
      service_breakdown: components['schemas']['SubaccountServiceBreakdown'][]
      /**
       * Period Breakdown
       * @description Breakdown by period
       */
      period_breakdown: components['schemas']['SubaccountPeriodBreakdown'][]
    }
    /**
     * ServiceCostData
     * @description Single service cost data point.
     */
    ServiceCostData: {
      /**
       * Billing Period Start
       * @description Billing period start
       */
      billing_period_start: string
      /**
       * Provider Name
       * @description Provider name
       */
      provider_name: string
      /**
       * Sub Account Id
       * @description Sub account ID
       */
      sub_account_id: string
      /**
       * Sub Account Name
       * @description Sub account name
       */
      sub_account_name: string
      /**
       * Service Name
       * @description Service name
       */
      service_name: string
      /**
       * Total Billed Cost
       * @description Total billed cost
       */
      total_billed_cost: number
      /**
       * Total Effective Cost
       * @description Total effective cost
       */
      total_effective_cost: number
      /**
       * Charge Count
       * @description Number of charges
       */
      charge_count: number
      /**
       * Avg Effective Cost
       * @description Average effective cost
       */
      avg_effective_cost: number
      /**
       * Min Effective Cost
       * @description Minimum effective cost
       */
      min_effective_cost: number
      /**
       * Max Effective Cost
       * @description Maximum effective cost
       */
      max_effective_cost: number
    }
    /**
     * ServiceCostFilters
     * @description Applied filters for service cost analysis.
     */
    ServiceCostFilters: {
      /**
       * Start Date
       * @description Start date
       */
      start_date: string
      /**
       * End Date
       * @description End date
       */
      end_date: string
      /**
       * Service Name
       * @description Service name filter
       */
      service_name: string
      /**
       * Provider Name
       * @description Provider name filter
       */
      provider_name?: string | null
      /**
       * Sub Account Id
       * @description Sub account ID filter
       */
      sub_account_id?: string | null
    }
    /**
     * ServiceCostSummary
     * @description Summary statistics for service cost analysis.
     */
    ServiceCostSummary: {
      /**
       * Total Service Cost
       * @description Total service cost
       */
      total_service_cost: number
      /**
       * Total Charge Count
       * @description Total number of charges
       */
      total_charge_count: number
      /**
       * Unique Billing Periods
       * @description Number of unique billing periods
       */
      unique_billing_periods: number
      /**
       * Unique Subaccounts
       * @description Number of unique subaccounts
       */
      unique_subaccounts: number
      /**
       * Unique Providers
       * @description Number of unique providers
       */
      unique_providers: number
      /**
       * Avg Cost Per Period
       * @description Average cost per period
       */
      avg_cost_per_period: number
      /**
       * Cost Variance
       * @description Cost variance (standard deviation)
       */
      cost_variance: number
      /**
       * Period Breakdown
       * @description Breakdown by period
       */
      period_breakdown: components['schemas']['PeriodBreakdown'][]
    }
    /**
     * ServiceCostTrendData
     * @description Single service cost trend data point.
     */
    ServiceCostTrendData: {
      /**
       * Charge Month
       * @description Charge month (1-12)
       */
      charge_month: number
      /**
       * Charge Year
       * @description Charge year
       */
      charge_year: number
      /**
       * Month Name
       * @description Month name (YYYY-MM)
       */
      month_name: string
      /**
       * Provider Name
       * @description Provider name
       */
      provider_name: string
      /**
       * Service Name
       * @description Service name
       */
      service_name: string
      /**
       * Total Effective Cost
       * @description Total effective cost
       */
      total_effective_cost: number
      /**
       * Charge Count
       * @description Number of charges
       */
      charge_count: number
      /**
       * Avg Effective Cost
       * @description Average effective cost
       */
      avg_effective_cost: number
    }
    /**
     * ServiceCostTrendFilters
     * @description Applied filters for service cost trend analysis.
     */
    ServiceCostTrendFilters: {
      /**
       * Start Date
       * @description Start date
       */
      start_date: string
      /**
       * End Date
       * @description End date
       */
      end_date: string
      /**
       * Provider Name
       * @description Provider name filter
       */
      provider_name?: string | null
      /**
       * Service Name
       * @description Service name filter
       */
      service_name?: string | null
    }
    /**
     * ServiceCostTrendResponse
     * @description Response for service cost trend analysis.
     */
    ServiceCostTrendResponse: {
      /**
       * Status
       * @description Response status
       */
      status: string
      /**
       * Data
       * @description Service cost trend data
       */
      data?: components['schemas']['ServiceCostTrendData'][] | null
      /** @description Summary statistics */
      summary?: components['schemas']['ServiceCostTrendSummary'] | null
      /** @description Applied filters */
      filters?: components['schemas']['ServiceCostTrendFilters'] | null
      /**
       * Message
       * @description Error message if status is error
       */
      message?: string | null
      /** @description Use case metadata */
      metadata?: components['schemas']['UseCaseMetadata'] | null
    }
    /**
     * ServiceCostTrendSummary
     * @description Summary statistics for service cost trend analysis.
     */
    ServiceCostTrendSummary: {
      /**
       * Total Cost
       * @description Total cost across all months
       */
      total_cost: number
      /**
       * Total Charge Count
       * @description Total number of charges
       */
      total_charge_count: number
      /**
       * Unique Months
       * @description Number of unique months
       */
      unique_months: number
      /**
       * Unique Services
       * @description Number of unique services
       */
      unique_services: number
      /**
       * Unique Providers
       * @description Number of unique providers
       */
      unique_providers: number
      /**
       * Avg Monthly Cost
       * @description Average monthly cost
       */
      avg_monthly_cost: number
      /**
       * Cost Growth Rate
       * @description Overall cost growth rate percentage
       */
      cost_growth_rate: number
      /**
       * Monthly Breakdown
       * @description Breakdown by month
       */
      monthly_breakdown: components['schemas']['MonthlyBreakdown'][]
      /**
       * Service Trends
       * @description Service trend analysis
       */
      service_trends: components['schemas']['ServiceTrend'][]
    }
    /**
     * ServiceInfo
     * @description Information about a service.
     */
    ServiceInfo: {
      /**
       * Service Name
       * @description Name of the service
       */
      service_name: string
      /**
       * Provider Name
       * @description Name of the provider
       */
      provider_name: string
      /**
       * Service Category
       * @description Category of the service
       */
      service_category: string
    }
    /**
     * ServiceTrend
     * @description Service trend summary.
     */
    ServiceTrend: {
      /**
       * Service Name
       * @description Service name
       */
      service_name: string
      /**
       * Total Cost
       * @description Total cost across all months
       */
      total_cost: number
      /**
       * Months Active
       * @description Number of months with activity
       */
      months_active: number
      /**
       * Avg Monthly Cost
       * @description Average monthly cost
       */
      avg_monthly_cost: number
      /**
       * Growth Rate Percentage
       * @description Month-over-month growth rate percentage
       */
      growth_rate_percentage: number
      /**
       * Cost Percentage
       * @description Percentage of total cost
       */
      cost_percentage: number
    }
    /**
     * ServicesSummary
     * @description Summary information for available services.
     */
    ServicesSummary: {
      /**
       * Total Available Services
       * @description Total number of available services
       */
      total_available_services: number
    }
    /**
     * SpecificTagAnalysis
     * @description Analysis for specific required tags.
     */
    SpecificTagAnalysis: {
      /**
       * Tag Name
       * @description Tag name
       */
      tag_name: string
      /**
       * Tagged Cost
       * @description Cost of resources with this tag
       */
      tagged_cost: number
      /**
       * Tagged Resources
       * @description Number of resources with this tag
       */
      tagged_resources: number
      /**
       * Cost Coverage Percentage
       * @description Percentage of total cost covered by this tag
       */
      cost_coverage_percentage: number
      /**
       * Resource Coverage Percentage
       * @description Percentage of total resources covered by this tag
       */
      resource_coverage_percentage: number
    }
    /**
     * SpendingByBillingPeriodResponse
     * @description Response for spending by billing period report.
     */
    SpendingByBillingPeriodResponse: {
      /**
       * Status
       * @description Response status
       */
      status: string
      /**
       * Data
       * @description Spending data
       */
      data?: components['schemas']['SpendingData'][] | null
      /** @description Summary statistics */
      summary?: components['schemas']['SpendingSummary'] | null
      /** @description Applied filters */
      filters?: components['schemas']['SpendingFilters'] | null
      /**
       * Message
       * @description Error message if status is error
       */
      message?: string | null
      /** @description Use case metadata */
      metadata?: components['schemas']['UseCaseMetadata'] | null
    }
    /**
     * SpendingCategoryBreakdown
     * @description Spending service category breakdown summary.
     */
    SpendingCategoryBreakdown: {
      /**
       * Service Category
       * @description Service category
       */
      service_category: string
      /**
       * Total Cost
       * @description Total cost for this category
       */
      total_cost: number
      /**
       * Charge Count
       * @description Number of charges
       */
      charge_count: number
      /**
       * Billing Periods
       * @description Number of billing periods
       */
      billing_periods: number
      /**
       * Unique Services
       * @description Number of unique services
       */
      unique_services: number
      /**
       * Cost Percentage
       * @description Percentage of total cost
       */
      cost_percentage: number
    }
    /**
     * SpendingData
     * @description Single spending data point.
     */
    SpendingData: {
      /**
       * Provider Name
       * @description Provider name
       */
      provider_name: string
      /**
       * Billing Account Name
       * @description Billing account name
       */
      billing_account_name: string
      /**
       * Billing Account Id
       * @description Billing account ID
       */
      billing_account_id: string
      /**
       * Billing Currency
       * @description Billing currency
       */
      billing_currency: string
      /**
       * Billing Period Start
       * @description Billing period start
       */
      billing_period_start: string
      /**
       * Service Category
       * @description Service category
       */
      service_category: string
      /**
       * Service Name
       * @description Service name
       */
      service_name: string
      /**
       * Total Billed Cost
       * @description Total billed cost
       */
      total_billed_cost: number
      /**
       * Charge Count
       * @description Number of charges
       */
      charge_count: number
      /**
       * Avg Billed Cost
       * @description Average billed cost
       */
      avg_billed_cost: number
      /**
       * Min Billed Cost
       * @description Minimum billed cost
       */
      min_billed_cost: number
      /**
       * Max Billed Cost
       * @description Maximum billed cost
       */
      max_billed_cost: number
    }
    /**
     * SpendingFilters
     * @description Applied filters for spending analysis.
     */
    SpendingFilters: {
      /**
       * Start Date
       * @description Start date
       */
      start_date: string
      /**
       * End Date
       * @description End date
       */
      end_date: string
      /**
       * Provider Name
       * @description Provider name filter
       */
      provider_name: string
      /**
       * Service Category
       * @description Service category filter
       */
      service_category?: string | null
      /**
       * Billing Account Id
       * @description Billing account ID filter
       */
      billing_account_id?: string | null
    }
    /**
     * SpendingPeriodBreakdown
     * @description Spending period breakdown summary.
     */
    SpendingPeriodBreakdown: {
      /**
       * Billing Period
       * @description Billing period
       */
      billing_period: string
      /**
       * Total Cost
       * @description Total cost for this period
       */
      total_cost: number
      /**
       * Charge Count
       * @description Number of charges
       */
      charge_count: number
      /**
       * Unique Service Categories
       * @description Number of unique service categories
       */
      unique_service_categories: number
      /**
       * Unique Billing Accounts
       * @description Number of unique billing accounts
       */
      unique_billing_accounts: number
      /**
       * Cost Percentage
       * @description Percentage of total cost
       */
      cost_percentage: number
    }
    /**
     * SpendingSummary
     * @description Summary statistics for spending analysis.
     */
    SpendingSummary: {
      /**
       * Total Spending
       * @description Total spending
       */
      total_spending: number
      /**
       * Total Charge Count
       * @description Total number of charges
       */
      total_charge_count: number
      /**
       * Unique Billing Periods
       * @description Number of unique billing periods
       */
      unique_billing_periods: number
      /**
       * Unique Service Categories
       * @description Number of unique service categories
       */
      unique_service_categories: number
      /**
       * Unique Billing Accounts
       * @description Number of unique billing accounts
       */
      unique_billing_accounts: number
      /**
       * Avg Spending Per Period
       * @description Average spending per period
       */
      avg_spending_per_period: number
      /**
       * Period Breakdown
       * @description Breakdown by period
       */
      period_breakdown: components['schemas']['SpendingPeriodBreakdown'][]
      /**
       * Service Category Breakdown
       * @description Breakdown by service category
       */
      service_category_breakdown: components['schemas']['SpendingCategoryBreakdown'][]
    }
    /**
     * StatisticsResponse
     * @description Response schema for billing statistics.
     */
    StatisticsResponse: {
      /** Total Records */
      total_records: number
      /** Total Cost */
      total_cost: number
      /** Average Cost Per Record */
      average_cost_per_record?: number | null
      /** Cost By Provider */
      cost_by_provider?: {
        [key: string]: number
      }
      /** Cost By Service */
      cost_by_service?: {
        [key: string]: number
      }
      /** Period Start */
      period_start?: string | null
      /** Period End */
      period_end?: string | null
    }
    /**
     * StatusBreakdown
     * @description Status breakdown summary.
     */
    StatusBreakdown: {
      /**
       * Status
       * @description Capacity reservation status
       */
      status: string
      /**
       * Total Cost
       * @description Total cost for this status
       */
      total_cost: number
      /**
       * Charge Count
       * @description Number of charges for this status
       */
      charge_count: number
      /**
       * Unique Reservations
       * @description Number of unique reservations for this status
       */
      unique_reservations: number
      /**
       * Cost Percentage
       * @description Percentage of total cost
       */
      cost_percentage: number
    }
    /**
     * SubaccountBreakdown
     * @description Subaccount breakdown summary.
     */
    SubaccountBreakdown: {
      /**
       * Sub Account Id
       * @description Sub account ID
       */
      sub_account_id: string
      /**
       * Sub Account Name
       * @description Sub account name
       */
      sub_account_name: string
      /**
       * Total Refund Amount
       * @description Total refund amount
       */
      total_refund_amount: number
      /**
       * Refund Count
       * @description Number of refunds
       */
      refund_count: number
      /**
       * Unique Service Categories
       * @description Number of unique service categories
       */
      unique_service_categories: number
      /**
       * Unique Providers
       * @description Number of unique providers
       */
      unique_providers: number
      /**
       * Refund Percentage
       * @description Percentage of total refunds
       */
      refund_percentage: number
    }
    /**
     * SubaccountPeriodBreakdown
     * @description Period breakdown for subaccount.
     */
    SubaccountPeriodBreakdown: {
      /**
       * Charge Period
       * @description Charge period
       */
      charge_period: string
      /**
       * Total Cost
       * @description Total cost for this period
       */
      total_cost: number
      /**
       * Cost Percentage
       * @description Percentage of total cost
       */
      cost_percentage: number
      /**
       * Deviation From Avg
       * @description Deviation from average cost
       */
      deviation_from_avg: number
    }
    /**
     * SubaccountServiceBreakdown
     * @description Service breakdown for subaccount.
     */
    SubaccountServiceBreakdown: {
      /**
       * Service Name
       * @description Service name
       */
      service_name: string
      /**
       * Total Cost
       * @description Total cost for this service
       */
      total_cost: number
      /**
       * Charge Count
       * @description Number of charges
       */
      charge_count: number
      /**
       * Charge Periods
       * @description Number of charge periods
       */
      charge_periods: number
      /**
       * Avg Cost Per Period
       * @description Average cost per period
       */
      avg_cost_per_period: number
      /**
       * Cost Percentage
       * @description Percentage of total cost
       */
      cost_percentage: number
    }
    /**
     * SyncActionResponse
     * @description Response for sync actions (cancel, retry).
     */
    SyncActionResponse: {
      /** Success */
      success: boolean
      /** Message */
      message: string
      /**
       * Run Id
       * Format: uuid
       */
      run_id: string
      /** New Run Id */
      new_run_id?: string | null
    }
    /**
     * SyncRunDetails
     * @description Detailed sync run information with logs and metrics.
     */
    SyncRunDetails: {
      /**
       * Id
       * Format: uuid
       */
      id: string
      /**
       * Provider Id
       * Format: uuid
       */
      provider_id: string
      /** Provider Name */
      provider_name?: string | null
      /** Status */
      status: string
      /** Run Type */
      run_type?: string | null
      /**
       * Started At
       * Format: date-time
       */
      started_at: string
      /** Completed At */
      completed_at?: string | null
      /** Start Date */
      start_date?: string | null
      /** End Date */
      end_date?: string | null
      /** Error Message */
      error_message?: string | null
      /** Logs */
      logs?: components['schemas']['SyncRunLog'][]
      metrics?: components['schemas']['SyncRunMetrics'] | null
      /** Config */
      config?: {
        [key: string]: unknown
      } | null
    }
    /**
     * SyncRunInfo
     * @description Basic sync run information.
     */
    SyncRunInfo: {
      /**
       * Id
       * Format: uuid
       */
      id: string
      /**
       * Provider Id
       * Format: uuid
       */
      provider_id: string
      /** Provider Name */
      provider_name?: string | null
      /** Status */
      status: string
      /**
       * Started At
       * Format: date-time
       */
      started_at: string
      /** Completed At */
      completed_at?: string | null
      /** Duration Seconds */
      duration_seconds?: number | null
      /** Records Processed */
      records_processed?: number | null
      /** Records Created */
      records_created?: number | null
      /** Records Updated */
      records_updated?: number | null
      /** Error Message */
      error_message?: string | null
    }
    /**
     * SyncRunLog
     * @description Sync run log entry.
     */
    SyncRunLog: {
      /**
       * Timestamp
       * Format: date-time
       */
      timestamp: string
      /** Level */
      level: string
      /** Message */
      message: string
      /** Component */
      component?: string | null
    }
    /**
     * SyncRunMetrics
     * @description Metrics for a sync run - only fields with real data.
     */
    SyncRunMetrics: {
      /** Duration Seconds */
      duration_seconds?: number | null
      /** Records Processed */
      records_processed?: number | null
      /** Records Created */
      records_created?: number | null
      /** Records Updated */
      records_updated?: number | null
      /** Records Skipped */
      records_skipped?: number | null
    }
    /**
     * SyncRunSummary
     * @description Summary statistics for sync runs.
     */
    SyncRunSummary: {
      /** Total Runs */
      total_runs: number
      /** Successful Runs */
      successful_runs: number
      /** Failed Runs */
      failed_runs: number
      /** Running Runs */
      running_runs: number
      /** Success Rate */
      success_rate: number
      /** Last Run Status */
      last_run_status?: string | null
      /** Last Run Time */
      last_run_time?: string | null
    }
    /**
     * SyncRunsResponse
     * @description Paginated response for sync runs.
     */
    SyncRunsResponse: {
      /** Runs */
      runs: components['schemas']['SyncRunInfo'][]
      pagination: components['schemas']['PaginationInfo']
    }
    /**
     * SyncStatisticsResponse
     * @description Response for sync statistics
     */
    SyncStatisticsResponse: {
      /** Period Days */
      period_days: number
      /** Total Runs */
      total_runs: number
      /** Successful Runs */
      successful_runs: number
      /** Failed Runs */
      failed_runs: number
      /** Cancelled Runs */
      cancelled_runs: number
      /** Average Duration Seconds */
      average_duration_seconds?: number | null
      /** Total Records Processed */
      total_records_processed: number
      /** Success Rate */
      success_rate: number
      /** Provider Stats */
      provider_stats?: components['schemas']['ProviderStats'][]
      /** Daily Stats */
      daily_stats?: components['schemas']['DailyStats'][]
    }
    /**
     * SyncStatusResponse
     * @description Response for sync status endpoint.
     */
    SyncStatusResponse: {
      /** Runs */
      runs: components['schemas']['SyncRunInfo'][]
      summary: components['schemas']['SyncRunSummary']
    }
    /**
     * SyncTriggerRequest
     * @description Request schema for triggering sync.
     */
    SyncTriggerRequest: {
      /**
       * Provider Id
       * @description Specific provider to sync
       */
      provider_id?: string | null
      /**
       * Start Date
       * @description Start date for sync
       */
      start_date?: string | null
      /**
       * End Date
       * @description End date for sync
       */
      end_date?: string | null
      /**
       * Days Back
       * @description Number of days to sync back
       * @default 30
       */
      days_back: number | null
    }
    /**
     * SyncTriggerResponse
     * @description Response for sync trigger endpoint.
     */
    SyncTriggerResponse: {
      /** Success */
      success: boolean
      /** Message */
      message: string
      /** Info */
      info?: string | null
    }
    /**
     * TagCoverageByProvider
     * @description Tag coverage statistics by provider.
     */
    TagCoverageByProvider: {
      /**
       * Provider Name
       * @description Provider name
       */
      provider_name: string
      /**
       * Tagged Cost
       * @description Tagged cost for this provider
       */
      tagged_cost: number
      /**
       * Total Cost
       * @description Total cost for this provider
       */
      total_cost: number
      /**
       * Tagged Resources
       * @description Tagged resources for this provider
       */
      tagged_resources: number
      /**
       * Total Resources
       * @description Total resources for this provider
       */
      total_resources: number
      /**
       * Cost Coverage Percentage
       * @description Cost coverage percentage for this provider
       */
      cost_coverage_percentage: number
      /**
       * Resource Coverage Percentage
       * @description Resource coverage percentage for this provider
       */
      resource_coverage_percentage: number
    }
    /**
     * TagCoverageData
     * @description Tag coverage analysis data.
     */
    TagCoverageData: {
      /** @description Overall coverage statistics */
      overall_coverage: components['schemas']['TagCoverageOverall']
      /**
       * Coverage By Provider
       * @description Coverage by provider
       */
      coverage_by_provider: components['schemas']['TagCoverageByProvider'][]
      /**
       * Specific Tag Analysis
       * @description Analysis of specific tags
       */
      specific_tag_analysis: components['schemas']['SpecificTagAnalysis'][]
    }
    /**
     * TagCoverageFilters
     * @description Applied filters for tag coverage analysis.
     */
    TagCoverageFilters: {
      /**
       * Start Date
       * @description Start date
       */
      start_date: string
      /**
       * End Date
       * @description End date
       */
      end_date: string
      /**
       * Provider Name
       * @description Provider name filter
       */
      provider_name?: string | null
      /**
       * Required Tags
       * @description Required tags to analyze
       */
      required_tags: string[]
    }
    /**
     * TagCoverageOverall
     * @description Overall tag coverage statistics.
     */
    TagCoverageOverall: {
      /**
       * Cost Coverage Percentage
       * @description Percentage of cost that is tagged
       */
      cost_coverage_percentage: number
      /**
       * Resource Coverage Percentage
       * @description Percentage of resources that are tagged
       */
      resource_coverage_percentage: number
      /**
       * Total Tagged Cost
       * @description Total cost of tagged resources
       */
      total_tagged_cost: number
      /**
       * Total Cost
       * @description Total cost of all resources
       */
      total_cost: number
      /**
       * Total Tagged Resources
       * @description Number of tagged resources
       */
      total_tagged_resources: number
      /**
       * Total Resources
       * @description Total number of resources
       */
      total_resources: number
    }
    /**
     * TagCoverageResponse
     * @description Response for tag coverage analysis.
     */
    TagCoverageResponse: {
      /**
       * Status
       * @description Response status
       */
      status: string
      /** @description Tag coverage data */
      data?: components['schemas']['TagCoverageData'] | null
      /** @description Summary statistics */
      summary?: components['schemas']['TagCoverageSummary'] | null
      /** @description Applied filters */
      filters?: components['schemas']['TagCoverageFilters'] | null
      /**
       * Message
       * @description Error message if status is error
       */
      message?: string | null
      /** @description Use case metadata */
      metadata?: components['schemas']['UseCaseMetadata'] | null
    }
    /**
     * TagCoverageSummary
     * @description Summary statistics for tag coverage analysis.
     */
    TagCoverageSummary: {
      /**
       * Overall Cost Coverage
       * @description Overall cost coverage percentage
       */
      overall_cost_coverage: number
      /**
       * Overall Resource Coverage
       * @description Overall resource coverage percentage
       */
      overall_resource_coverage: number
      /**
       * Total Providers
       * @description Number of providers analyzed
       */
      total_providers: number
      /**
       * Tags Analyzed
       * @description Number of specific tags analyzed
       */
      tags_analyzed: number
      /**
       * Untagged Cost
       * @description Total untagged cost
       */
      untagged_cost: number
      /**
       * Untagged Resources
       * @description Number of untagged resources
       */
      untagged_resources: number
    }
    /**
     * TrendDataPoint
     * @description Single trend data point.
     */
    TrendDataPoint: {
      /**
       * Date
       * Format: date-time
       */
      date: string
      /** Cost */
      cost: number
      /** Record Count */
      record_count?: number | null
    }
    /**
     * UnitBreakdown
     * @description Unit breakdown summary.
     */
    UnitBreakdown: {
      /**
       * Pricing Unit
       * @description Pricing unit
       */
      pricing_unit: string
      /**
       * Total Cost
       * @description Total cost for this unit
       */
      total_cost: number
      /**
       * Total Quantity
       * @description Total quantity for this unit
       */
      total_quantity: number
      /**
       * Purchase Count
       * @description Number of purchases for this unit
       */
      purchase_count: number
    }
    /**
     * UnitEconomicsData
     * @description Single unit economics data point.
     */
    UnitEconomicsData: {
      /**
       * Charge Period Date
       * @description Date of the charge period
       */
      charge_period_date: string
      /**
       * Cost Per Unit
       * @description Cost per unit (e.g., per GB)
       */
      cost_per_unit: number
      /**
       * Total Cost
       * @description Total cost for the day
       */
      total_cost: number
      /**
       * Total Quantity
       * @description Total quantity consumed
       */
      total_quantity: number
      /**
       * Consumed Unit
       * @description Unit of measurement
       */
      consumed_unit: string
      /**
       * Record Count
       * @description Number of records
       */
      record_count: number
    }
    /**
     * UnitEconomicsFilters
     * @description Applied filters for unit economics analysis.
     */
    UnitEconomicsFilters: {
      /**
       * Start Date
       * @description Start date
       */
      start_date: string
      /**
       * End Date
       * @description End date
       */
      end_date: string
      /**
       * Unit Type
       * @description Unit type filter
       */
      unit_type: string
      /**
       * Charge Description Filter
       * @description Charge description filter
       */
      charge_description_filter: string
    }
    /**
     * UnitEconomicsResponse
     * @description Response for unit economics calculation.
     */
    UnitEconomicsResponse: {
      /**
       * Status
       * @description Response status
       */
      status: string
      /**
       * Data
       * @description Unit economics data
       */
      data?: components['schemas']['UnitEconomicsData'][] | null
      /** @description Summary statistics */
      summary?: components['schemas']['UnitEconomicsSummary'] | null
      /** @description Applied filters */
      filters?: components['schemas']['UnitEconomicsFilters'] | null
      /**
       * Message
       * @description Error message if status is error
       */
      message?: string | null
      /** @description Use case metadata */
      metadata?: components['schemas']['UseCaseMetadata'] | null
    }
    /**
     * UnitEconomicsSummary
     * @description Summary statistics for unit economics analysis.
     */
    UnitEconomicsSummary: {
      /**
       * Total Days
       * @description Total number of days analyzed
       */
      total_days: number
      /**
       * Total Cost
       * @description Total cost across all days
       */
      total_cost: number
      /**
       * Total Quantity
       * @description Total quantity across all days
       */
      total_quantity: number
      /**
       * Average Cost Per Unit
       * @description Average cost per unit
       */
      average_cost_per_unit: number
      /**
       * Unit Type
       * @description Type of unit analyzed
       */
      unit_type: string
    }
    /**
     * UnusedCapacityData
     * @description Single unused capacity reservation data point.
     */
    UnusedCapacityData: {
      /**
       * Provider Name
       * @description Provider name
       */
      provider_name: string
      /**
       * Billing Account Id
       * @description Billing account ID
       */
      billing_account_id: string
      /**
       * Commitment Discount Id
       * @description Capacity reservation ID
       */
      commitment_discount_id: string
      /**
       * Commitment Discount Status
       * @description Capacity reservation status
       */
      commitment_discount_status: string
      /**
       * Total Billed Cost
       * @description Total billed cost
       */
      total_billed_cost: number
      /**
       * Total Effective Cost
       * @description Total effective cost
       */
      total_effective_cost: number
      /**
       * Charge Count
       * @description Number of charges
       */
      charge_count: number
      /**
       * First Charge Date
       * @description First charge date
       */
      first_charge_date?: string | null
      /**
       * Last Charge Date
       * @description Last charge date
       */
      last_charge_date?: string | null
    }
    /**
     * UnusedCapacityFilters
     * @description Applied filters for unused capacity analysis.
     */
    UnusedCapacityFilters: {
      /**
       * Start Date
       * @description Start date
       */
      start_date: string
      /**
       * End Date
       * @description End date
       */
      end_date: string
      /**
       * Provider Name
       * @description Provider name filter
       */
      provider_name?: string | null
      /**
       * Billing Account Id
       * @description Billing account ID filter
       */
      billing_account_id?: string | null
    }
    /**
     * UnusedCapacityResponse
     * @description Response for unused capacity identification.
     */
    UnusedCapacityResponse: {
      /**
       * Status
       * @description Response status
       */
      status: string
      /**
       * Data
       * @description Unused capacity data
       */
      data?: components['schemas']['UnusedCapacityData'][] | null
      /** @description Summary statistics */
      summary?: components['schemas']['UnusedCapacitySummary'] | null
      /** @description Applied filters */
      filters?: components['schemas']['UnusedCapacityFilters'] | null
      /**
       * Message
       * @description Error message if status is error
       */
      message?: string | null
      /** @description Use case metadata */
      metadata?: components['schemas']['UseCaseMetadata'] | null
    }
    /**
     * UnusedCapacitySummary
     * @description Summary statistics for unused capacity analysis.
     */
    UnusedCapacitySummary: {
      /**
       * Total Unused Reservations
       * @description Total number of unused reservations
       */
      total_unused_reservations: number
      /**
       * Total Unused Cost
       * @description Total cost of unused reservations
       */
      total_unused_cost: number
      /**
       * Total Charges
       * @description Total number of charges
       */
      total_charges: number
      /**
       * Unique Providers
       * @description Number of unique providers
       */
      unique_providers: number
      /**
       * Unique Accounts
       * @description Number of unique accounts
       */
      unique_accounts: number
      /**
       * Cost Impact
       * @description Financial impact of unused capacity
       */
      cost_impact: number
      /**
       * Provider Breakdown
       * @description Breakdown by provider
       */
      provider_breakdown: components['schemas']['ProviderBreakdown'][]
    }
    /**
     * UseCaseFilters
     * @description Available filters for use cases.
     */
    UseCaseFilters: {
      /**
       * Available Personas
       * @description All available personas
       */
      available_personas: string[]
      /**
       * Available Capabilities
       * @description All available capabilities
       */
      available_capabilities: string[]
      /**
       * Applied Filters
       * @description Currently applied filters
       */
      applied_filters: {
        [key: string]: string | null
      }
    }
    /**
     * UseCaseListItem
     * @description Single use case in the list.
     */
    UseCaseListItem: {
      /**
       * Id
       * @description Use case identifier
       */
      id: string
      /**
       * Endpoint
       * @description API endpoint path
       */
      endpoint: string
      /**
       * Name
       * @description Name of the use case
       */
      name: string
      /**
       * Context
       * @description Use case context/description
       * @default
       */
      context: string
      /** Related Personas */
      related_personas?: string[]
      /** Related Capabilities */
      related_capabilities?: string[]
      /**
       * Status
       * @description Implementation status
       */
      status: string
    }
    /**
     * UseCaseListResponse
     * @description Response for use case listing.
     */
    UseCaseListResponse: {
      /**
       * Use Cases
       * @description List of use cases
       */
      use_cases: components['schemas']['UseCaseListItem'][]
      /**
       * Total
       * @description Total number of use cases
       */
      total: number
      /** @description Filter information */
      filters: components['schemas']['UseCaseFilters']
    }
    /**
     * UseCaseMetadata
     * @description Metadata for a single use case.
     */
    UseCaseMetadata: {
      /**
       * Name
       * @description Name of the use case
       */
      name: string
      /**
       * Endpoint
       * @description API endpoint path
       */
      endpoint: string
      /**
       * Method
       * @description HTTP method
       * @default GET
       */
      method: string
      /**
       * Status
       * @description Implementation status
       */
      status: string
      /**
       * Context
       * @description Use case context/description
       * @default
       */
      context: string
      /**
       * Related Personas
       * @description Related FinOps personas
       */
      related_personas?: string[]
      /**
       * Related Capabilities
       * @description Related FinOps capabilities
       */
      related_capabilities?: string[]
      /**
       * Focus Columns
       * @description FOCUS columns used
       */
      focus_columns?: string[]
      /**
       * Example Filters
       * @description Example query parameters
       */
      example_filters?: {
        [key: string]: unknown
      }
    }
    /** ValidationError */
    ValidationError: {
      /** Location */
      loc: (string | number)[]
      /** Message */
      msg: string
      /** Error Type */
      type: string
    }
    /**
     * VirtualCurrencyPurchaseData
     * @description Single virtual currency purchase data point.
     */
    VirtualCurrencyPurchaseData: {
      /**
       * Provider Name
       * @description Cloud provider name
       */
      provider_name: string
      /**
       * Publisher Name
       * @description Publisher name
       */
      publisher_name: string
      /**
       * Charge Description
       * @description Charge description
       */
      charge_description: string
      /**
       * Pricing Unit
       * @description Pricing unit
       */
      pricing_unit: string
      /**
       * Billing Currency
       * @description Billing currency
       */
      billing_currency: string
      /**
       * Total Pricing Quantity
       * @description Total pricing quantity
       */
      total_pricing_quantity: number
      /**
       * Total Billed Cost
       * @description Total billed cost
       */
      total_billed_cost: number
      /**
       * Purchase Count
       * @description Number of purchases
       */
      purchase_count: number
      /**
       * Avg Purchase Cost
       * @description Average purchase cost
       */
      avg_purchase_cost: number
      /**
       * First Purchase
       * @description First purchase date
       */
      first_purchase?: string | null
      /**
       * Last Purchase
       * @description Last purchase date
       */
      last_purchase?: string | null
    }
    /**
     * VirtualCurrencyPurchaseFilters
     * @description Applied filters for virtual currency purchase analysis.
     */
    VirtualCurrencyPurchaseFilters: {
      /**
       * Start Date
       * @description Start date
       */
      start_date: string
      /**
       * End Date
       * @description End date
       */
      end_date: string
      /**
       * Pricing Unit
       * @description Pricing unit filter
       */
      pricing_unit?: string | null
      /**
       * Group By
       * @description Grouping method
       */
      group_by: string
    }
    /**
     * VirtualCurrencyPurchaseResponse
     * @description Response for virtual currency purchase analysis.
     */
    VirtualCurrencyPurchaseResponse: {
      /**
       * Status
       * @description Response status
       */
      status: string
      /**
       * Data
       * @description Virtual currency purchase data
       */
      data?: components['schemas']['VirtualCurrencyPurchaseData'][] | null
      /** @description Summary statistics */
      summary?: components['schemas']['VirtualCurrencyPurchaseSummary'] | null
      /** @description Applied filters */
      filters?: components['schemas']['VirtualCurrencyPurchaseFilters'] | null
      /**
       * Message
       * @description Error message if status is error
       */
      message?: string | null
      /** @description Use case metadata */
      metadata?: components['schemas']['UseCaseMetadata'] | null
    }
    /**
     * VirtualCurrencyPurchaseSummary
     * @description Summary statistics for virtual currency purchase analysis.
     */
    VirtualCurrencyPurchaseSummary: {
      /**
       * Total Purchases
       * @description Total number of purchases
       */
      total_purchases: number
      /**
       * Total Cost
       * @description Total cost across all purchases
       */
      total_cost: number
      /**
       * Total Quantity
       * @description Total quantity purchased
       */
      total_quantity: number
      /**
       * Unique Units
       * @description Number of unique pricing units
       */
      unique_units: number
      /**
       * Avg Purchase Cost
       * @description Average cost per purchase
       */
      avg_purchase_cost: number
      /**
       * Unit Breakdown
       * @description Breakdown by pricing unit
       */
      unit_breakdown: components['schemas']['UnitBreakdown'][]
    }
    /**
     * VirtualCurrencyTargetData
     * @description Single virtual currency target data point.
     */
    VirtualCurrencyTargetData: {
      /**
       * Provider Name
       * @description Cloud provider name
       */
      provider_name: string
      /**
       * Publisher Name
       * @description Publisher name
       */
      publisher_name: string
      /**
       * Service Name
       * @description Service name
       */
      service_name: string
      /**
       * Charge Description
       * @description Charge description
       */
      charge_description: string
      /**
       * Total Effective Cost
       * @description Total effective cost
       */
      total_effective_cost: number
      /**
       * Charge Count
       * @description Number of charges
       */
      charge_count: number
      /**
       * Pricing Currency
       * @description Pricing currency used
       */
      pricing_currency: string
    }
    /**
     * VirtualCurrencyTargetFilters
     * @description Applied filters for virtual currency target analysis.
     */
    VirtualCurrencyTargetFilters: {
      /**
       * Start Date
       * @description Start date
       */
      start_date: string
      /**
       * End Date
       * @description End date
       */
      end_date: string
      /**
       * Pricing Currency
       * @description Pricing currency filter
       */
      pricing_currency?: string | null
      /**
       * Limit
       * @description Result limit
       */
      limit: number
    }
    /**
     * VirtualCurrencyTargetResponse
     * @description Response for virtual currency target analysis.
     */
    VirtualCurrencyTargetResponse: {
      /**
       * Status
       * @description Response status
       */
      status: string
      /**
       * Data
       * @description Virtual currency target data
       */
      data?: components['schemas']['VirtualCurrencyTargetData'][] | null
      /** @description Summary statistics */
      summary?: components['schemas']['VirtualCurrencyTargetSummary'] | null
      /** @description Applied filters */
      filters?: components['schemas']['VirtualCurrencyTargetFilters'] | null
      /**
       * Message
       * @description Error message if status is error
       */
      message?: string | null
      /** @description Use case metadata */
      metadata?: components['schemas']['UseCaseMetadata'] | null
    }
    /**
     * VirtualCurrencyTargetSummary
     * @description Summary statistics for virtual currency target analysis.
     */
    VirtualCurrencyTargetSummary: {
      /**
       * Total Charges
       * @description Total number of charges
       */
      total_charges: number
      /**
       * Total Cost
       * @description Total cost across all charges
       */
      total_cost: number
      /**
       * Unique Services
       * @description Number of unique services
       */
      unique_services: number
      /**
       * Top Currency
       * @description Currency with highest cost
       */
      top_currency?: string | null
      /**
       * Currencies Found
       * @description All currencies found
       */
      currencies_found: string[]
    }
    /**
     * HealthCheckResponse
     * @description Health check response.
     */
    app__schemas__billing__HealthCheckResponse: {
      /** Status */
      status: string
      /** Service */
      service: string
      /** Timestamp */
      timestamp: string
    }
    /**
     * HealthCheckResponse
     * @description Health check response.
     */
    app__schemas__export__HealthCheckResponse: {
      /** Status */
      status: string
      /** Service */
      service: string
      /** Timestamp */
      timestamp: string
    }
    /**
     * HealthCheckResponse
     * @description Health check response for providers API.
     */
    app__schemas__provider__HealthCheckResponse: {
      /** Status */
      status: string
      /** Service */
      service: string
      /** Version */
      version: string
      /** Timestamp */
      timestamp?: string
    }
    /**
     * HealthCheckResponse
     * @description Health check response.
     */
    app__schemas__sync__HealthCheckResponse: {
      /** Status */
      status: string
      /** Service */
      service: string
      /** Timestamp */
      timestamp: string
      /** Details */
      details?: {
        [key: string]: unknown
      } | null
    }
  }
  responses: never
  parameters: never
  requestBodies: never
  headers: never
  pathItems: never
}
export type $defs = Record<string, never>
export interface operations {
  trigger_sync_api_v1_syncs_trigger_post: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['SyncTriggerRequest']
      }
    }
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['SyncTriggerResponse']
        }
      }
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['HTTPValidationError']
        }
      }
    }
  }
  get_sync_status_api_v1_syncs_status_get: {
    parameters: {
      query?: {
        provider_id?: string | null
        /** @description Number of providers to return */
        limit?: number
      }
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['SyncStatusResponse']
        }
      }
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['HTTPValidationError']
        }
      }
    }
  }
  get_sync_runs_api_v1_syncs_runs_get: {
    parameters: {
      query?: {
        /** @description Number of records to skip */
        skip?: number
        /** @description Number of records to return */
        limit?: number
        provider_id?: string | null
        /** @description Filter by sync status */
        status?: string | null
        /** @description Filter runs from this date */
        start_date?: string | null
        /** @description Filter runs until this date */
        end_date?: string | null
      }
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['SyncRunsResponse']
        }
      }
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['HTTPValidationError']
        }
      }
    }
  }
  get_sync_run_api_v1_syncs_runs__run_id__get: {
    parameters: {
      query?: never
      header?: never
      path: {
        run_id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['SyncRunDetails']
        }
      }
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['HTTPValidationError']
        }
      }
    }
  }
  cancel_sync_run_api_v1_syncs_runs__run_id__cancel_post: {
    parameters: {
      query?: never
      header?: never
      path: {
        run_id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['SyncActionResponse']
        }
      }
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['HTTPValidationError']
        }
      }
    }
  }
  retry_sync_run_api_v1_syncs_runs__run_id__retry_post: {
    parameters: {
      query?: never
      header?: never
      path: {
        run_id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['SyncActionResponse']
        }
      }
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['HTTPValidationError']
        }
      }
    }
  }
  get_sync_statistics_api_v1_syncs_stats_get: {
    parameters: {
      query?: {
        provider_id?: string | null
        /** @description Number of days to analyze */
        days?: number
      }
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['SyncStatisticsResponse']
        }
      }
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['HTTPValidationError']
        }
      }
    }
  }
  sync_health_check_api_v1_syncs_health_get: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['app__schemas__sync__HealthCheckResponse']
        }
      }
    }
  }
  get_pipeline_graph_api_v1_syncs_pipeline_graph_get: {
    parameters: {
      query?: {
        format?: string
      }
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': unknown
        }
      }
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['HTTPValidationError']
        }
      }
    }
  }
  health_check_api_v1_providers_health_get: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['app__schemas__provider__HealthCheckResponse']
        }
      }
    }
  }
  list_providers_api_v1_providers_get: {
    parameters: {
      query?: {
        /** @description Include inactive providers */
        include_inactive?: boolean
        /** @description Filter by provider type */
        provider_type?: string | null
      }
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ProviderResponse'][]
        }
      }
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['HTTPValidationError']
        }
      }
    }
  }
  create_provider_api_v1_providers_post: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['ProviderCreate']
      }
    }
    responses: {
      /** @description Successful Response */
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ProviderResponse']
        }
      }
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['HTTPValidationError']
        }
      }
    }
  }
  get_provider_api_v1_providers__provider_id__get: {
    parameters: {
      query?: never
      header?: never
      path: {
        provider_id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ProviderResponse']
        }
      }
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['HTTPValidationError']
        }
      }
    }
  }
  update_provider_api_v1_providers__provider_id__put: {
    parameters: {
      query?: never
      header?: never
      path: {
        provider_id: string
      }
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['ProviderUpdate']
      }
    }
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ProviderResponse']
        }
      }
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['HTTPValidationError']
        }
      }
    }
  }
  delete_provider_api_v1_providers__provider_id__delete: {
    parameters: {
      query?: never
      header?: never
      path: {
        provider_id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['MessageResponse']
        }
      }
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['HTTPValidationError']
        }
      }
    }
  }
  test_provider_connection_api_v1_providers__provider_id__test_post: {
    parameters: {
      query?: never
      header?: never
      path: {
        provider_id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ProviderTestResult']
        }
      }
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['HTTPValidationError']
        }
      }
    }
  }
  get_provider_types_info_api_v1_providers_types_info_get: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ProviderTypesResponse']
        }
      }
    }
  }
  get_auth_fields_api_v1_providers_types__provider_type__auth_fields_get: {
    parameters: {
      query?: {
        /** @description Specific auth method to get fields for */
        auth_method?: string | null
      }
      header?: never
      path: {
        provider_type: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['AuthFieldsResponse']
        }
      }
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['HTTPValidationError']
        }
      }
    }
  }
  export_billing_data_api_v1_export_billing_get: {
    parameters: {
      query?: {
        format?: string
        /** @description Number of records to skip */
        skip?: number
        /** @description Number of records to export (max 50k) */
        limit?: number
        start_date?: string | null
        end_date?: string | null
        provider_id?: string | null
        service_name?: string | null
        service_category?: string | null
        charge_category?: string | null
        min_cost?: number | null
        max_cost?: number | null
      }
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': unknown
        }
      }
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['HTTPValidationError']
        }
      }
    }
  }
  export_health_check_api_v1_export_health_get: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['app__schemas__export__HealthCheckResponse']
        }
      }
    }
  }
  get_billing_summary_api_v1_billing_summary_get: {
    parameters: {
      query?: {
        start_date?: string | null
        end_date?: string | null
        provider_id?: string | null
        /** @description 3-letter currency code */
        currency?: string | null
      }
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['BillingSummaryResponse']
        }
      }
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['HTTPValidationError']
        }
      }
    }
  }
  get_billing_data_api_v1_billing_data_get: {
    parameters: {
      query?: {
        /** @description Number of records to skip */
        skip?: number
        /** @description Number of records to return */
        limit?: number
        start_date?: string | null
        end_date?: string | null
        provider_id?: string | null
        service_name?: string | null
        service_category?: string | null
        charge_category?: string | null
        min_cost?: number | null
        max_cost?: number | null
      }
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['BillingDataResponse']
        }
      }
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['HTTPValidationError']
        }
      }
    }
  }
  get_cost_by_service_api_v1_billing_services_get: {
    parameters: {
      query?: {
        start_date?: string | null
        end_date?: string | null
        provider_id?: string | null
        limit?: number
      }
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ServiceBreakdownResponse']
        }
      }
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['HTTPValidationError']
        }
      }
    }
  }
  get_cost_trends_api_v1_billing_trends_get: {
    parameters: {
      query?: {
        start_date?: string | null
        end_date?: string | null
        provider_id?: string | null
        group_by?: string
      }
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['CostTrendsResponse']
        }
      }
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['HTTPValidationError']
        }
      }
    }
  }
  get_billing_statistics_api_v1_billing_statistics_get: {
    parameters: {
      query?: {
        start_date?: string | null
        end_date?: string | null
        provider_id?: string | null
      }
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['StatisticsResponse']
        }
      }
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['HTTPValidationError']
        }
      }
    }
  }
  billing_health_check_api_v1_billing_health_get: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['app__schemas__billing__HealthCheckResponse']
        }
      }
    }
  }
  list_use_cases_api_v1_analytics__get: {
    parameters: {
      query?: {
        /** @description Filter by related persona */
        persona?: string | null
        /** @description Filter by related capability */
        capability?: string | null
      }
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['UseCaseListResponse']
        }
      }
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['HTTPValidationError']
        }
      }
    }
  }
  calculate_resource_rate_api_v1_analytics_resource_rate_get: {
    parameters: {
      query: {
        /** @description Start date for analysis */
        start_date: string
        /** @description End date for analysis */
        end_date: string
        /** @description Filter by provider name */
        provider_name?: string | null
        /** @description Filter by service name */
        service_name?: string | null
        /** @description Filter by region name */
        region_name?: string | null
      }
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ResourceRateResponse']
        }
      }
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['HTTPValidationError']
        }
      }
    }
  }
  quantify_resource_usage_api_v1_analytics_resource_usage_get: {
    parameters: {
      query: {
        /** @description Start date for analysis */
        start_date: string
        /** @description End date for analysis */
        end_date: string
        /** @description Filter by provider name */
        provider_name?: string | null
        /** @description Filter by service name */
        service_name?: string | null
        /** @description Filter by region name */
        region_name?: string | null
      }
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ResourceUsageResponse']
        }
      }
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['HTTPValidationError']
        }
      }
    }
  }
  calculate_unit_economics_api_v1_analytics_unit_economics_get: {
    parameters: {
      query: {
        /** @description Start date for analysis */
        start_date: string
        /** @description End date for analysis */
        end_date: string
        /** @description Unit type to analyze (e.g., GB, Hours) */
        unit_type?: string
        /** @description Filter for charge description */
        charge_description_filter?: string
      }
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['UnitEconomicsResponse']
        }
      }
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['HTTPValidationError']
        }
      }
    }
  }
  analyze_virtual_currency_target_api_v1_analytics_virtual_currency_target_get: {
    parameters: {
      query: {
        /** @description Start date for analysis */
        start_date: string
        /** @description End date for analysis */
        end_date: string
        /** @description Filter by specific pricing currency */
        pricing_currency?: string | null
        /** @description Maximum number of results to return */
        limit?: number
      }
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['VirtualCurrencyTargetResponse']
        }
      }
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['HTTPValidationError']
        }
      }
    }
  }
  analyze_effective_cost_by_currency_api_v1_analytics_effective_cost_by_currency_get: {
    parameters: {
      query: {
        /** @description Start date for analysis */
        start_date: string
        /** @description End date for analysis */
        end_date: string
        /** @description Include exchange rate analysis */
        include_exchange_rates?: boolean
      }
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['EffectiveCostByCurrencyResponse']
        }
      }
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['HTTPValidationError']
        }
      }
    }
  }
  analyze_virtual_currency_purchases_api_v1_analytics_virtual_currency_purchases_get: {
    parameters: {
      query: {
        /** @description Start date for analysis */
        start_date: string
        /** @description End date for analysis */
        end_date: string
        /** @description Filter by specific pricing unit */
        pricing_unit?: string | null
        /** @description Grouping method */
        group_by?: string
      }
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['VirtualCurrencyPurchaseResponse']
        }
      }
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['HTTPValidationError']
        }
      }
    }
  }
  analyze_contracted_savings_api_v1_analytics_contracted_savings_get: {
    parameters: {
      query: {
        /** @description Start date for analysis */
        start_date: string
        /** @description End date for analysis */
        end_date: string
        /** @description Filter by commitment type (e.g., reserved_instances) */
        commitment_type?: string | null
      }
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ContractedSavingsResponse']
        }
      }
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['HTTPValidationError']
        }
      }
    }
  }
  analyze_tag_coverage_api_v1_analytics_tag_coverage_get: {
    parameters: {
      query: {
        /** @description Start date for analysis */
        start_date: string
        /** @description End date for analysis */
        end_date: string
        /** @description Filter by provider name */
        provider_name?: string | null
        /** @description List of required tags to analyze */
        required_tags?: string[]
      }
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['TagCoverageResponse']
        }
      }
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['HTTPValidationError']
        }
      }
    }
  }
  analyze_sku_metered_costs_api_v1_analytics_sku_metered_costs_get: {
    parameters: {
      query: {
        /** @description Start date for analysis */
        start_date: string
        /** @description End date for analysis */
        end_date: string
        /** @description Filter by specific SKU ID */
        sku_id?: string | null
        /** @description Filter by provider name */
        provider_name?: string | null
        /** @description Maximum number of results to return */
        limit?: number
      }
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['SKUMeteredCostsResponse']
        }
      }
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['HTTPValidationError']
        }
      }
    }
  }
  get_service_category_breakdown_api_v1_analytics_service_category_breakdown_get: {
    parameters: {
      query: {
        /** @description Start date for analysis */
        start_date: string
        /** @description End date for analysis */
        end_date: string
        /** @description Filter by provider name */
        provider_name?: string | null
        /** @description Filter by service category */
        service_category?: string | null
      }
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ServiceCategoryBreakdownResponse']
        }
      }
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['HTTPValidationError']
        }
      }
    }
  }
  analyze_capacity_reservations_api_v1_analytics_capacity_reservation_analysis_get: {
    parameters: {
      query: {
        /** @description Start date for analysis */
        start_date: string
        /** @description End date for analysis */
        end_date: string
        /** @description Filter by provider name */
        provider_name?: string | null
        /** @description Filter by billing account ID */
        billing_account_id?: string | null
      }
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['CapacityReservationAnalysisResponse']
        }
      }
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['HTTPValidationError']
        }
      }
    }
  }
  identify_unused_capacity_api_v1_analytics_unused_capacity_get: {
    parameters: {
      query: {
        /** @description Start date for analysis */
        start_date: string
        /** @description End date for analysis */
        end_date: string
        /** @description Filter by provider name */
        provider_name?: string | null
        /** @description Filter by billing account ID */
        billing_account_id?: string | null
      }
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['UnusedCapacityResponse']
        }
      }
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['HTTPValidationError']
        }
      }
    }
  }
  get_refunds_by_subaccount_api_v1_analytics_refunds_by_subaccount_get: {
    parameters: {
      query: {
        /** @description Start date for analysis */
        start_date: string
        /** @description End date for analysis */
        end_date: string
        /** @description Filter by provider name */
        provider_name?: string | null
        /** @description Filter by billing account ID */
        billing_account_id?: string | null
        /** @description Filter by service category */
        service_category?: string | null
      }
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['RefundsBySubaccountResponse']
        }
      }
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['HTTPValidationError']
        }
      }
    }
  }
  get_recurring_commitment_charges_api_v1_analytics_recurring_commitment_charges_get: {
    parameters: {
      query: {
        /** @description Start date for analysis */
        start_date: string
        /** @description End date for analysis */
        end_date: string
        /** @description Filter by commitment discount type */
        commitment_discount_type?: string | null
        /** @description Charge frequency filter */
        charge_frequency?: string
      }
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['RecurringCommitmentChargesResponse']
        }
      }
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['HTTPValidationError']
        }
      }
    }
  }
  analyze_service_costs_api_v1_analytics_service_cost_analysis_get: {
    parameters: {
      query: {
        /** @description Start date for analysis */
        start_date: string
        /** @description End date for analysis */
        end_date: string
        /** @description Service name to analyze */
        service_name: string
        /** @description Filter by provider name */
        provider_name?: string | null
        /** @description Filter by sub account ID */
        sub_account_id?: string | null
      }
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ServiceCostAnalysisResponse']
        }
      }
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['HTTPValidationError']
        }
      }
    }
  }
  get_spending_by_billing_period_api_v1_analytics_spending_by_billing_period_get: {
    parameters: {
      query: {
        /** @description Start date for analysis */
        start_date: string
        /** @description End date for analysis */
        end_date: string
        /** @description Provider name to analyze */
        provider_name: string
        /** @description Filter by service category */
        service_category?: string | null
        /** @description Filter by billing account ID */
        billing_account_id?: string | null
      }
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['SpendingByBillingPeriodResponse']
        }
      }
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['HTTPValidationError']
        }
      }
    }
  }
  analyze_service_costs_by_region_api_v1_analytics_service_costs_by_region_get: {
    parameters: {
      query: {
        /** @description Start date for analysis */
        start_date: string
        /** @description End date for analysis */
        end_date: string
        /** @description Filter by provider name */
        provider_name?: string | null
        /** @description Filter by region ID */
        region_id?: string | null
        /** @description Filter by service name */
        service_name?: string | null
      }
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ServiceCostByRegionResponse']
        }
      }
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['HTTPValidationError']
        }
      }
    }
  }
  get_service_costs_by_subaccount_api_v1_analytics_service_costs_by_subaccount_get: {
    parameters: {
      query: {
        /** @description Start date for analysis */
        start_date: string
        /** @description End date for analysis */
        end_date: string
        /** @description Sub account ID to analyze */
        sub_account_id: string
        /** @description Provider name to analyze */
        provider_name: string
        /** @description Filter by service name */
        service_name?: string | null
      }
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ServiceCostBySubaccountResponse']
        }
      }
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['HTTPValidationError']
        }
      }
    }
  }
  analyze_service_cost_trends_api_v1_analytics_service_cost_trends_get: {
    parameters: {
      query: {
        /** @description Start date for analysis */
        start_date: string
        /** @description End date for analysis */
        end_date: string
        /** @description Filter by provider name */
        provider_name?: string | null
        /** @description Filter by service name */
        service_name?: string | null
      }
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ServiceCostTrendResponse']
        }
      }
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['HTTPValidationError']
        }
      }
    }
  }
  get_application_cost_trends_api_v1_analytics_application_cost_trends_get: {
    parameters: {
      query: {
        /** @description Start date for analysis */
        start_date: string
        /** @description End date for analysis */
        end_date: string
        /** @description Application tag to analyze */
        application_tag: string
        /** @description Filter by service name */
        service_name?: string | null
      }
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ApplicationCostTrendResponse']
        }
      }
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['HTTPValidationError']
        }
      }
    }
  }
  get_connected_providers_api_v1_analytics_providers_get: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ConnectedProvidersResponse']
        }
      }
    }
  }
  get_available_services_api_v1_analytics_services_get: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['AvailableServicesResponse']
        }
      }
    }
  }
  analytics_health_check_api_v1_analytics_health_get: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['AnalyticsHealthCheckResponse']
        }
      }
    }
  }
  get_config_api_v1_config_get: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': unknown
        }
      }
    }
  }
  health_check_health_get: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': unknown
        }
      }
    }
  }
  api_root_api__get: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': unknown
        }
      }
    }
  }
  test_endpoint_api_test_get: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': unknown
        }
      }
    }
  }
}
